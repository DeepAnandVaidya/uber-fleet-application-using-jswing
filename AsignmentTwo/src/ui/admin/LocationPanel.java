/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.admin;

import java.awt.Color;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.stream.Collectors;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import model.Cars;
import model.Flags;
import model.Fleet;

/**
 *
 * @author deepv
 */
public class LocationPanel extends javax.swing.JPanel {

    /**
     * Creates new form test
     */
    Flags flag;
    Fleet fleet;
    List<String> serialNumberList;

    public LocationPanel(Flags flag, Fleet fleet, List<String> serialNumberList) {
        initComponents();
        this.flag = flag;
        this.fleet = fleet;

        lblLocationFilter.setVisible(false);
        drpLocationFilter.setVisible(false);

        lblManufacturerFilter.setVisible(false);
        drpManufacturerFilter.setVisible(false);

        lblManufactureYearFilter.setVisible(false);
        drpManufacturerYearFilter.setVisible(false);

        lblSeatsFilter.setVisible(false);
        txtMinSeats.setVisible(false);
        txtMaxSeats.setVisible(false);

        lblSerialNoFilter.setVisible(false);
        txtSerialNoFilter.setVisible(false);

        lblModelNoFilter.setVisible(false);
        txtModelNoFilter.setVisible(false);

        lblMaintCertFilter.setVisible(false);
        chkMaintCertFilterYes.setVisible(false);
        chkMaintCertFilterNo.setVisible(false);

        lblAvaiabilityFilter.setVisible(false);
        chkAvailabilityYes.setVisible(false);
        chkAvaiabilityNo.setVisible(false);

        btnSubmitAdvanceSearch.setVisible(false);

        enableLocationFilter.setVisible(false);
        enableManufacturerFilter.setVisible(false);
        enableManufactureYearFilter.setVisible(false);
        enableSeatsFilter.setVisible(false);
        enableSerialNoFilter.setVisible(false);
        enableModelNoFilter.setVisible(false);
        enableMaintCertFilter.setVisible(false);
        enableAvailabilityFilter.setVisible(false);
        btnClearFilter.setVisible(false);
        this.serialNumberList = serialNumberList;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        layeredPane = new javax.swing.JLayeredPane();
        LocationPanel = new javax.swing.JPanel();
        lblTitle1 = new javax.swing.JLabel();
        drpLocation = new javax.swing.JComboBox<>();
        btnSubmit = new javax.swing.JButton();
        lblHeader = new javax.swing.JLabel();
        lblFooter = new javax.swing.JLabel();
        AdminDashboardPanel = new javax.swing.JPanel();
        lblTitle = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        panel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblFleet = new javax.swing.JTable();
        btnAdd = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        drpLocationFilter = new javax.swing.JComboBox<>();
        btnSubmitAdvanceSearch = new javax.swing.JButton();
        lblFooter1 = new javax.swing.JLabel();
        btnDetail = new javax.swing.JButton();
        lblManufacturerFilter = new javax.swing.JLabel();
        drpManufacturerFilter = new javax.swing.JComboBox<>();
        lblLocationFilter = new javax.swing.JLabel();
        lblManufactureYearFilter = new javax.swing.JLabel();
        drpManufacturerYearFilter = new javax.swing.JComboBox<>();
        lblSeatsFilter = new javax.swing.JLabel();
        txtMinSeats = new javax.swing.JTextField();
        txtMaxSeats = new javax.swing.JTextField();
        lblSerialNoFilter = new javax.swing.JLabel();
        txtSerialNoFilter = new javax.swing.JTextField();
        lblModelNoFilter = new javax.swing.JLabel();
        txtModelNoFilter = new javax.swing.JTextField();
        enableLocationFilter = new javax.swing.JRadioButton();
        enableManufacturerFilter = new javax.swing.JRadioButton();
        enableManufactureYearFilter = new javax.swing.JRadioButton();
        enableSeatsFilter = new javax.swing.JRadioButton();
        enableSerialNoFilter = new javax.swing.JRadioButton();
        enableModelNoFilter = new javax.swing.JRadioButton();
        toggleFilterOptions = new javax.swing.JToggleButton();
        btnClearFilter = new javax.swing.JButton();
        lblMaintCertFilter = new javax.swing.JLabel();
        enableMaintCertFilter = new javax.swing.JRadioButton();
        chkMaintCertFilterNo = new javax.swing.JCheckBox();
        chkMaintCertFilterYes = new javax.swing.JCheckBox();
        lblAvaiabilityFilter = new javax.swing.JLabel();
        chkAvailabilityYes = new javax.swing.JCheckBox();
        chkAvaiabilityNo = new javax.swing.JCheckBox();
        enableAvailabilityFilter = new javax.swing.JRadioButton();
        tglFindRide = new javax.swing.JToggleButton();
        jButton1 = new javax.swing.JButton();
        btnImport = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        AdminAddPanel = new javax.swing.JPanel();
        lblManufacturer = new javax.swing.JLabel();
        lblModel = new javax.swing.JLabel();
        lblSeats = new javax.swing.JLabel();
        lblSerialNo = new javax.swing.JLabel();
        lblModelNo = new javax.swing.JLabel();
        lblLocation = new javax.swing.JLabel();
        lblMaintCert = new javax.swing.JLabel();
        txtManufacturer = new javax.swing.JTextField();
        txtModel = new javax.swing.JTextField();
        txtSeats = new javax.swing.JTextField();
        txtSerialNo = new javax.swing.JTextField();
        txtModelNo = new javax.swing.JTextField();
        btnSave = new javax.swing.JButton();
        lblManufactureYear = new javax.swing.JLabel();
        txtManufactureYear = new javax.swing.JTextField();
        btnBack = new javax.swing.JButton();
        drpLocSelect = new javax.swing.JComboBox<>();
        lblTitle2 = new javax.swing.JLabel();
        lblFooter2 = new javax.swing.JLabel();
        rdBtnAvailability = new javax.swing.JRadioButton();
        lblAvailability = new javax.swing.JLabel();
        drpMaintCert = new javax.swing.JComboBox<>();
        AdminViewPanel = new javax.swing.JPanel();
        lblManufacturerView = new javax.swing.JLabel();
        lblModelView = new javax.swing.JLabel();
        lblSeatsView = new javax.swing.JLabel();
        lblSerialNoView = new javax.swing.JLabel();
        lblModelNoView = new javax.swing.JLabel();
        lblLocationView = new javax.swing.JLabel();
        lblMaintCertView = new javax.swing.JLabel();
        txtManufacturerView = new javax.swing.JTextField();
        txtModelView = new javax.swing.JTextField();
        txtSeatsView = new javax.swing.JTextField();
        txtSerialNoView = new javax.swing.JTextField();
        txtModelNoView = new javax.swing.JTextField();
        txtMaincertView = new javax.swing.JTextField();
        lblManufactureYearVIew = new javax.swing.JLabel();
        txtManufactureYearView = new javax.swing.JTextField();
        btnBackView = new javax.swing.JButton();
        lblTitleView = new javax.swing.JLabel();
        lblFooterView = new javax.swing.JLabel();
        txtLocationView = new javax.swing.JTextField();
        MoreOptionsPanel = new javax.swing.JPanel();
        lblTitleView1 = new javax.swing.JLabel();
        lblFooterView1 = new javax.swing.JLabel();
        lblUpdatedFleets = new javax.swing.JLabel();
        lblUpdatedFleetsDesc = new javax.swing.JLabel();
        btnBackView1 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        lblBrands = new javax.swing.JLabel();
        lblBrandDesc = new javax.swing.JLabel();
        btnViewBrands = new javax.swing.JButton();
        btnLastUpdates = new javax.swing.JButton();
        AdminUpdatePanel = new javax.swing.JPanel();
        lblTitle3 = new javax.swing.JLabel();
        lblFooter3 = new javax.swing.JLabel();
        lblManufacturer2 = new javax.swing.JLabel();
        lblModel2 = new javax.swing.JLabel();
        lblSeats2 = new javax.swing.JLabel();
        lblSerialNo2 = new javax.swing.JLabel();
        lblModelNo2 = new javax.swing.JLabel();
        lblLocation2 = new javax.swing.JLabel();
        lblMaintCert2 = new javax.swing.JLabel();
        txtManufacturer2 = new javax.swing.JTextField();
        txtModel2 = new javax.swing.JTextField();
        txtSeats2 = new javax.swing.JTextField();
        txtSerialNo2 = new javax.swing.JTextField();
        txtModelNo2 = new javax.swing.JTextField();
        btnSave2 = new javax.swing.JButton();
        lblManufactureYear2 = new javax.swing.JLabel();
        txtManufactureYear2 = new javax.swing.JTextField();
        btnBack2 = new javax.swing.JButton();
        drpLocSelect2 = new javax.swing.JComboBox<>();
        rdBtnAvailability1 = new javax.swing.JRadioButton();
        lblAvailability1 = new javax.swing.JLabel();
        drpMaintCert2 = new javax.swing.JComboBox<>();

        layeredPane.setLayout(new java.awt.CardLayout());

        LocationPanel.setBackground(new java.awt.Color(255, 255, 255));

        lblTitle1.setFont(new java.awt.Font("Nirmala UI", 0, 18)); // NOI18N
        lblTitle1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle1.setText("Pick your location of interest");

        drpLocation.setFont(new java.awt.Font("Perpetua", 0, 18)); // NOI18N
        drpLocation.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Allston", "Back Bay", "Bay Village", "Beacon Hill", "Brighton", "Charlestown","Fenway-Kenmore" }));
        drpLocation.setAlignmentX(java.awt.Component.CENTER_ALIGNMENT);
        drpLocation.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        drpLocation.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        drpLocation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                drpLocationActionPerformed(evt);
            }
        });

        btnSubmit.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 18)); // NOI18N
        btnSubmit.setText("GO");
        btnSubmit.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        btnSubmit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });

        lblHeader.setBackground(new java.awt.Color(0, 0, 0));
        lblHeader.setFont(new java.awt.Font("Perpetua", 0, 48)); // NOI18N
        lblHeader.setForeground(new java.awt.Color(255, 255, 255));
        lblHeader.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHeader.setText("<html><b>UBER</b> <em>Fleet</em><span  font color=\"rgb(255, 179, 0)\"><b>..</b></span></html>");
        lblHeader.setOpaque(true);

        lblFooter.setBackground(new java.awt.Color(0, 0, 0));
        lblFooter.setForeground(new java.awt.Color(255, 255, 255));
        lblFooter.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblFooter.setText("<html>Logged in as <b>ADMIN<b></html>");
        lblFooter.setOpaque(true);

        javax.swing.GroupLayout LocationPanelLayout = new javax.swing.GroupLayout(LocationPanel);
        LocationPanel.setLayout(LocationPanelLayout);
        LocationPanelLayout.setHorizontalGroup(
            LocationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblHeader, javax.swing.GroupLayout.DEFAULT_SIZE, 1149, Short.MAX_VALUE)
            .addComponent(lblFooter)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, LocationPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(LocationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(lblTitle1, javax.swing.GroupLayout.PREFERRED_SIZE, 545, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(drpLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 446, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(166, 166, 166))
        );
        LocationPanelLayout.setVerticalGroup(
            LocationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LocationPanelLayout.createSequentialGroup()
                .addComponent(lblHeader, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(124, 124, 124)
                .addComponent(lblTitle1, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(drpLocation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 127, Short.MAX_VALUE)
                .addComponent(btnSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(83, 83, 83)
                .addComponent(lblFooter, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        layeredPane.add(LocationPanel, "card3");

        AdminDashboardPanel.setBackground(new java.awt.Color(255, 255, 255));

        lblTitle.setBackground(new java.awt.Color(0, 0, 0));
        lblTitle.setFont(new java.awt.Font("Perpetua", 1, 48)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(255, 255, 255));
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("<html>Your <em>Fleet</em><span  font color=\"rgb(255, 179, 0)\"><b>..</b></span></html>");
        lblTitle.setOpaque(true);

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));

        panel.setBackground(new java.awt.Color(255, 255, 255));

        tblFleet.setBackground(new java.awt.Color(255, 255, 255));
        tblFleet.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        tblFleet.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Manufacturer", "Model", "Manufac. On", "Seats", "Serial No.", "Model No.", "Location", "Available"
            }
        ));
        jScrollPane2.setViewportView(tblFleet);

        btnAdd.setBackground(new java.awt.Color(215, 254, 211));
        btnAdd.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnAdd.setForeground(new java.awt.Color(72, 151, 64));
        btnAdd.setText("ADD");
        btnAdd.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnDelete.setBackground(new java.awt.Color(255, 204, 204));
        btnDelete.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnDelete.setForeground(new java.awt.Color(255, 0, 0));
        btnDelete.setText("DELETE");
        btnDelete.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        drpLocationFilter.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {"--ALL LOCATIONS--", "Allston", "Back Bay", "Bay Village", "Beacon Hill", "Brighton", "Charlestown","Fenway-Kenmore" }));
        drpLocationFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                drpLocationFilterActionPerformed(evt);
            }
        });

        btnSubmitAdvanceSearch.setBackground(new java.awt.Color(214, 245, 245));
        btnSubmitAdvanceSearch.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnSubmitAdvanceSearch.setForeground(new java.awt.Color(20, 82, 82));
        btnSubmitAdvanceSearch.setText("SUBMIT");
        btnSubmitAdvanceSearch.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSubmitAdvanceSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitAdvanceSearchActionPerformed(evt);
            }
        });

        lblFooter1.setBackground(new java.awt.Color(0, 0, 0));
        lblFooter1.setForeground(new java.awt.Color(255, 255, 255));
        lblFooter1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblFooter1.setText("<html>Logged in as <b>ADMIN<b></html>");
        lblFooter1.setOpaque(true);

        btnDetail.setBackground(new java.awt.Color(179, 224, 255));
        btnDetail.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnDetail.setForeground(new java.awt.Color(0, 107, 179));
        btnDetail.setText("360 degree");
        btnDetail.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnDetail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDetailActionPerformed(evt);
            }
        });

        lblManufacturerFilter.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblManufacturerFilter.setText("Manufacturer:");

        drpManufacturerFilter.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--ALL--", "Toyota", "Honda", "General Motors", "Chevrolet", "Ford", "Mazda", "Nissan" }));
        drpManufacturerFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                drpManufacturerFilterActionPerformed(evt);
            }
        });

        lblLocationFilter.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblLocationFilter.setText("Location:");

        lblManufactureYearFilter.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblManufactureYearFilter.setText("Year of manufacture:");

        drpManufacturerYearFilter.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--ALL--", "2000", "2001", "2002", "2003", "2004", "2005", "2006", "2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020", "2021" }));
        drpManufacturerYearFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                drpManufacturerYearFilterActionPerformed(evt);
            }
        });

        lblSeatsFilter.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblSeatsFilter.setText("Number of seats:");

        txtMinSeats.setForeground(new java.awt.Color(153, 153, 153));
        txtMinSeats.setText("Min.");
        txtMinSeats.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtMinSeatsFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtMinSeatsFocusLost(evt);
            }
        });
        txtMinSeats.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMinSeatsActionPerformed(evt);
            }
        });

        txtMaxSeats.setForeground(new java.awt.Color(153, 153, 153));
        txtMaxSeats.setText("Max.");
        txtMaxSeats.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtMaxSeatsFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtMaxSeatsFocusLost(evt);
            }
        });

        lblSerialNoFilter.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblSerialNoFilter.setText("Serial No:");

        lblModelNoFilter.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblModelNoFilter.setText("Model No:");

        enableLocationFilter.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        enableLocationFilter.setText("Location");
        enableLocationFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enableLocationFilterActionPerformed(evt);
            }
        });

        enableManufacturerFilter.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        enableManufacturerFilter.setText("Manufacturer");
        enableManufacturerFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enableManufacturerFilterActionPerformed(evt);
            }
        });

        enableManufactureYearFilter.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        enableManufactureYearFilter.setText("Year of Manufacture");
        enableManufactureYearFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enableManufactureYearFilterActionPerformed(evt);
            }
        });

        enableSeatsFilter.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        enableSeatsFilter.setText("No. of seats");
        enableSeatsFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enableSeatsFilterActionPerformed(evt);
            }
        });

        enableSerialNoFilter.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        enableSerialNoFilter.setText("Serial No.");
        enableSerialNoFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enableSerialNoFilterActionPerformed(evt);
            }
        });

        enableModelNoFilter.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        enableModelNoFilter.setText("Model No.");
        enableModelNoFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enableModelNoFilterActionPerformed(evt);
            }
        });

        toggleFilterOptions.setBackground(new java.awt.Color(214, 245, 245));
        toggleFilterOptions.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        toggleFilterOptions.setForeground(new java.awt.Color(20, 82, 82));
        toggleFilterOptions.setText("Filter Results");
        toggleFilterOptions.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toggleFilterOptionsActionPerformed(evt);
            }
        });

        btnClearFilter.setBackground(new java.awt.Color(179, 224, 255));
        btnClearFilter.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnClearFilter.setForeground(new java.awt.Color(20, 82, 82));
        btnClearFilter.setText("CLEAR FILTER");
        btnClearFilter.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnClearFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearFilterActionPerformed(evt);
            }
        });

        lblMaintCertFilter.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblMaintCertFilter.setText("Expired Maintenance Cert?");

        enableMaintCertFilter.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        enableMaintCertFilter.setText("Maintenance Cert Expiry");
        enableMaintCertFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enableMaintCertFilterActionPerformed(evt);
            }
        });

        chkMaintCertFilterNo.setText("N");
        chkMaintCertFilterNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkMaintCertFilterNoActionPerformed(evt);
            }
        });

        chkMaintCertFilterYes.setText("Y");
        chkMaintCertFilterYes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkMaintCertFilterYesActionPerformed(evt);
            }
        });

        lblAvaiabilityFilter.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblAvaiabilityFilter.setText("Availability:");

        chkAvailabilityYes.setText("Y");
        chkAvailabilityYes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkAvailabilityYesActionPerformed(evt);
            }
        });

        chkAvaiabilityNo.setText("N");
        chkAvaiabilityNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkAvaiabilityNoActionPerformed(evt);
            }
        });

        enableAvailabilityFilter.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        enableAvailabilityFilter.setText("Availability");
        enableAvailabilityFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enableAvailabilityFilterActionPerformed(evt);
            }
        });

        tglFindRide.setBackground(new java.awt.Color(255, 255, 179));
        if(!tglFindRide.isSelected()){
            tglFindRide.setText("<html><b>Find me a RIDE</b><span  font color=\"rgb(255, 179, 0)\"><b>..</b></span></html> ");
            tglFindRide.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        } else {
            tglFindRide.setText("<html><b>RETURN</b></span></html>");
        }
        tglFindRide.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tglFindRideActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton1.setForeground(new java.awt.Color(0, 153, 153));
        jButton1.setText("More Options");
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        btnImport.setBackground(new java.awt.Color(255, 255, 255));
        btnImport.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnImport.setForeground(new java.awt.Color(72, 151, 64));
        btnImport.setText("Import File");
        btnImport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImportActionPerformed(evt);
            }
        });

        btnUpdate.setBackground(new java.awt.Color(215, 254, 211));
        btnUpdate.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnUpdate.setForeground(new java.awt.Color(72, 151, 64));
        btnUpdate.setText("UPDATE");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelLayout = new javax.swing.GroupLayout(panel);
        panel.setLayout(panelLayout);
        panelLayout.setHorizontalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblFooter1)
            .addGroup(panelLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelLayout.createSequentialGroup()
                        .addComponent(toggleFilterOptions, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(306, 306, 306)
                        .addComponent(btnClearFilter)
                        .addGap(29, 29, 29)
                        .addComponent(btnSubmitAdvanceSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelLayout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(enableModelNoFilter)
                            .addComponent(enableLocationFilter)
                            .addComponent(enableManufacturerFilter)
                            .addComponent(enableManufactureYearFilter)
                            .addComponent(enableSeatsFilter)
                            .addComponent(enableSerialNoFilter)
                            .addComponent(enableMaintCertFilter)
                            .addComponent(enableAvailabilityFilter))
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelLayout.createSequentialGroup()
                                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(panelLayout.createSequentialGroup()
                                        .addGap(100, 100, 100)
                                        .addComponent(lblMaintCertFilter)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(chkMaintCertFilterYes)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(chkMaintCertFilterNo)
                                        .addGap(191, 191, 191))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelLayout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lblAvaiabilityFilter)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(chkAvailabilityYes)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(chkAvaiabilityNo))
                            .addGroup(panelLayout.createSequentialGroup()
                                .addGap(129, 129, 129)
                                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(panelLayout.createSequentialGroup()
                                        .addComponent(lblLocationFilter)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(drpLocationFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(panelLayout.createSequentialGroup()
                                        .addComponent(lblManufacturerFilter)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(drpManufacturerFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(panelLayout.createSequentialGroup()
                                        .addComponent(lblManufactureYearFilter)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(drpManufacturerYearFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(43, 43, 43)
                                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(panelLayout.createSequentialGroup()
                                        .addComponent(lblSeatsFilter)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtMinSeats, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtMaxSeats, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(panelLayout.createSequentialGroup()
                                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblSerialNoFilter)
                                            .addComponent(lblModelNoFilter))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtModelNoFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtSerialNoFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                    .addGroup(panelLayout.createSequentialGroup()
                        .addComponent(btnAdd)
                        .addGap(18, 18, 18)
                        .addComponent(btnDelete)
                        .addGap(18, 18, 18)
                        .addComponent(btnUpdate)
                        .addGap(18, 18, 18)
                        .addComponent(btnImport, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnDetail)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1)
                        .addGap(18, 18, 18)
                        .addComponent(tglFindRide, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 907, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(188, Short.MAX_VALUE))
        );

        panelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txtMaxSeats, txtMinSeats});

        panelLayout.setVerticalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd)
                    .addComponent(btnDelete)
                    .addComponent(btnDetail)
                    .addComponent(jButton1)
                    .addComponent(btnImport)
                    .addComponent(btnUpdate)
                    .addComponent(tglFindRide, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSubmitAdvanceSearch)
                    .addComponent(toggleFilterOptions)
                    .addComponent(btnClearFilter))
                .addGap(18, 18, 18)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelLayout.createSequentialGroup()
                        .addComponent(enableLocationFilter)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(enableManufacturerFilter)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(enableManufactureYearFilter)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(enableSeatsFilter)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(enableSerialNoFilter)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(enableModelNoFilter))
                    .addGroup(panelLayout.createSequentialGroup()
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelLayout.createSequentialGroup()
                                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblLocationFilter)
                                    .addComponent(drpLocationFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblManufacturerFilter)
                                    .addComponent(drpManufacturerFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblManufactureYearFilter)
                                    .addComponent(drpManufacturerYearFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(panelLayout.createSequentialGroup()
                                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblSeatsFilter)
                                    .addComponent(txtMinSeats, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtMaxSeats, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(12, 12, 12)
                                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblSerialNoFilter)
                                    .addComponent(txtSerialNoFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(12, 12, 12)
                                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblModelNoFilter)
                                    .addComponent(txtModelNoFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(18, 18, 18)
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblMaintCertFilter)
                            .addComponent(chkMaintCertFilterYes)
                            .addComponent(chkMaintCertFilterNo)
                            .addComponent(lblAvaiabilityFilter)
                            .addComponent(chkAvailabilityYes)
                            .addComponent(chkAvaiabilityNo))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(enableMaintCertFilter)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(enableAvailabilityFilter)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 325, Short.MAX_VALUE)
                .addComponent(lblFooter1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17))
        );

        jScrollPane1.setViewportView(panel);

        javax.swing.GroupLayout AdminDashboardPanelLayout = new javax.swing.GroupLayout(AdminDashboardPanel);
        AdminDashboardPanel.setLayout(AdminDashboardPanelLayout);
        AdminDashboardPanelLayout.setHorizontalGroup(
            AdminDashboardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblTitle, javax.swing.GroupLayout.DEFAULT_SIZE, 1149, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AdminDashboardPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1137, Short.MAX_VALUE)
                .addContainerGap())
        );
        AdminDashboardPanelLayout.setVerticalGroup(
            AdminDashboardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AdminDashboardPanelLayout.createSequentialGroup()
                .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 542, Short.MAX_VALUE))
        );

        layeredPane.add(AdminDashboardPanel, "card3");

        AdminAddPanel.setBackground(new java.awt.Color(255, 255, 255));

        lblManufacturer.setText("MANUFACTURER:");

        lblModel.setText("MODEL:");

        lblSeats.setText("SEATS:");

        lblSerialNo.setText("SERIAL NUMBER:");

        lblModelNo.setText("MODEL NUMBER:");

        lblLocation.setText("LOCATION:");

        lblMaintCert.setText("MAINTENANCE CERTIFICATE:");

        txtManufacturer.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        txtModel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        txtSeats.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        txtSerialNo.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txtSerialNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSerialNoActionPerformed(evt);
            }
        });

        txtModelNo.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        btnSave.setBackground(new java.awt.Color(215, 254, 211));
        btnSave.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnSave.setForeground(new java.awt.Color(72, 151, 64));
        btnSave.setText("SAVE");
        btnSave.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        lblManufactureYear.setText("MANUFACTURE YEAR:");

        txtManufactureYear.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        btnBack.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnBack.setText("BACK");
        btnBack.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        drpLocSelect.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Allston", "Back Bay", "Bay Village", "Beacon Hill", "Brighton", "Charlestown","Fenway-Kenmore" }));

        lblTitle2.setBackground(new java.awt.Color(0, 0, 0));
        lblTitle2.setFont(new java.awt.Font("Perpetua", 1, 48)); // NOI18N
        lblTitle2.setForeground(new java.awt.Color(255, 255, 255));
        lblTitle2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle2.setText("<html><b>Add</b> to your <em>Fleet</em><span  font color=\"rgb(255, 179, 0)\"><b>..</b></span></html>");
        lblTitle2.setToolTipText("");
        lblTitle2.setOpaque(true);

        lblFooter2.setBackground(new java.awt.Color(0, 0, 0));
        lblFooter2.setOpaque(true);

        rdBtnAvailability.setText("YES");
        rdBtnAvailability.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdBtnAvailabilityActionPerformed(evt);
            }
        });

        lblAvailability.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblAvailability.setText("Is this car available?");

        drpMaintCert.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {  "Expired", "Valid"  }));

        javax.swing.GroupLayout AdminAddPanelLayout = new javax.swing.GroupLayout(AdminAddPanel);
        AdminAddPanel.setLayout(AdminAddPanelLayout);
        AdminAddPanelLayout.setHorizontalGroup(
            AdminAddPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AdminAddPanelLayout.createSequentialGroup()
                .addGroup(AdminAddPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTitle2)
                    .addGroup(AdminAddPanelLayout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(btnBack)
                        .addGap(134, 134, 134)
                        .addGroup(AdminAddPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(lblManufactureYear)
                            .addComponent(lblSerialNo)
                            .addComponent(lblModel)
                            .addComponent(lblModelNo)
                            .addComponent(lblLocation)
                            .addComponent(lblMaintCert)
                            .addComponent(lblSeats)
                            .addComponent(lblManufacturer))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 198, Short.MAX_VALUE)
                        .addGroup(AdminAddPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(AdminAddPanelLayout.createSequentialGroup()
                                .addGroup(AdminAddPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtManufacturer)
                                    .addComponent(txtModel)
                                    .addComponent(txtSeats)
                                    .addComponent(txtSerialNo)
                                    .addComponent(txtModelNo)
                                    .addComponent(txtManufactureYear)
                                    .addComponent(drpLocSelect, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(78, 78, 78)
                                .addGroup(AdminAddPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                    .addComponent(lblAvailability, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(rdBtnAvailability)))
                            .addComponent(drpMaintCert, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(206, 206, 206))
                    .addComponent(lblFooter2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(AdminAddPanelLayout.createSequentialGroup()
                .addGap(374, 374, 374)
                .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        AdminAddPanelLayout.setVerticalGroup(
            AdminAddPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AdminAddPanelLayout.createSequentialGroup()
                .addComponent(lblTitle2, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(AdminAddPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AdminAddPanelLayout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(btnBack))
                    .addGroup(AdminAddPanelLayout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addGroup(AdminAddPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblManufacturer)
                            .addComponent(txtManufacturer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblAvailability))
                        .addGroup(AdminAddPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(AdminAddPanelLayout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addGroup(AdminAddPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblModel)
                                    .addComponent(txtModel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(AdminAddPanelLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rdBtnAvailability)))
                        .addGap(18, 18, 18)
                        .addGroup(AdminAddPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblManufactureYear)
                            .addComponent(txtManufactureYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(23, 23, 23)
                        .addGroup(AdminAddPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblSeats)
                            .addComponent(txtSeats, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(AdminAddPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblSerialNo)
                            .addComponent(txtSerialNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(AdminAddPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblModelNo)
                            .addComponent(txtModelNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(AdminAddPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(drpLocSelect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblLocation))
                        .addGap(18, 18, 18)
                        .addGroup(AdminAddPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblMaintCert)
                            .addComponent(drpMaintCert, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(21, 21, 21)
                .addComponent(btnSave)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 72, Short.MAX_VALUE)
                .addComponent(lblFooter2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        layeredPane.add(AdminAddPanel, "card4");

        AdminViewPanel.setBackground(new java.awt.Color(255, 255, 255));

        lblManufacturerView.setText("MANUFACTURER:");

        lblModelView.setText("MODEL:");

        lblSeatsView.setText("SEATS:");

        lblSerialNoView.setText("SERIAL NUMBER:");

        lblModelNoView.setText("MODEL NUMBER:");

        lblLocationView.setText("LOCATION:");

        lblMaintCertView.setText("MAINTENANCE CERTIFICATE:");

        txtManufacturerView.setEditable(false);
        txtManufacturerView.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        txtModelView.setEditable(false);
        txtModelView.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        txtSeatsView.setEditable(false);
        txtSeatsView.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        txtSerialNoView.setEditable(false);
        txtSerialNoView.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txtSerialNoView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSerialNoViewActionPerformed(evt);
            }
        });

        txtModelNoView.setEditable(false);
        txtModelNoView.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        txtMaincertView.setEditable(false);
        txtMaincertView.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        lblManufactureYearVIew.setText("MANUFACTURE YEAR:");

        txtManufactureYearView.setEditable(false);
        txtManufactureYearView.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        btnBackView.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnBackView.setText("BACK");
        btnBackView.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBackView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackViewActionPerformed(evt);
            }
        });

        lblTitleView.setBackground(new java.awt.Color(0, 0, 0));
        lblTitleView.setFont(new java.awt.Font("Perpetua", 0, 48)); // NOI18N
        lblTitleView.setForeground(new java.awt.Color(255, 255, 255));
        lblTitleView.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitleView.setText("<html><b><span  font color=\"rgb(255, 179, 0)\">360</span> degree</b> view</html>");
        lblTitleView.setToolTipText("");
        lblTitleView.setOpaque(true);

        lblFooterView.setBackground(new java.awt.Color(0, 0, 0));
        lblFooterView.setOpaque(true);

        txtLocationView.setEditable(false);
        txtLocationView.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        javax.swing.GroupLayout AdminViewPanelLayout = new javax.swing.GroupLayout(AdminViewPanel);
        AdminViewPanel.setLayout(AdminViewPanelLayout);
        AdminViewPanelLayout.setHorizontalGroup(
            AdminViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AdminViewPanelLayout.createSequentialGroup()
                .addGroup(AdminViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTitleView)
                    .addGroup(AdminViewPanelLayout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(btnBackView)
                        .addGap(134, 134, 134)
                        .addGroup(AdminViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(lblManufactureYearVIew)
                            .addComponent(lblSerialNoView)
                            .addComponent(lblModelView)
                            .addComponent(lblModelNoView)
                            .addComponent(lblLocationView)
                            .addComponent(lblMaintCertView)
                            .addComponent(lblSeatsView)
                            .addComponent(lblManufacturerView))
                        .addGap(30, 30, 30)
                        .addGroup(AdminViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtManufacturerView, javax.swing.GroupLayout.DEFAULT_SIZE, 139, Short.MAX_VALUE)
                            .addComponent(txtModelView)
                            .addComponent(txtSeatsView)
                            .addComponent(txtSerialNoView)
                            .addComponent(txtModelNoView)
                            .addComponent(txtMaincertView)
                            .addComponent(txtManufactureYearView)
                            .addComponent(txtLocationView))
                        .addGap(0, 570, Short.MAX_VALUE))
                    .addComponent(lblFooterView, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        AdminViewPanelLayout.setVerticalGroup(
            AdminViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AdminViewPanelLayout.createSequentialGroup()
                .addComponent(lblTitleView, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(AdminViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AdminViewPanelLayout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(btnBackView))
                    .addGroup(AdminViewPanelLayout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addGroup(AdminViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblManufacturerView)
                            .addComponent(txtManufacturerView, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(AdminViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblModelView)
                            .addComponent(txtModelView, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(AdminViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblManufactureYearVIew)
                            .addComponent(txtManufactureYearView, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(AdminViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblSeatsView)
                            .addComponent(txtSeatsView, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(AdminViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblSerialNoView)
                            .addComponent(txtSerialNoView, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(AdminViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblModelNoView)
                            .addComponent(txtModelNoView, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(AdminViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblLocationView)
                            .addComponent(txtLocationView, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(AdminViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblMaintCertView)
                            .addComponent(txtMaincertView, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 172, Short.MAX_VALUE)
                .addComponent(lblFooterView, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        layeredPane.add(AdminViewPanel, "card5");

        MoreOptionsPanel.setBackground(new java.awt.Color(255, 255, 255));

        lblTitleView1.setBackground(new java.awt.Color(0, 0, 0));
        lblTitleView1.setFont(new java.awt.Font("Perpetua", 0, 48)); // NOI18N
        lblTitleView1.setForeground(new java.awt.Color(255, 255, 255));
        lblTitleView1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitleView1.setText("More Options");
        lblTitleView1.setToolTipText("");
        lblTitleView1.setOpaque(true);

        lblFooterView1.setBackground(new java.awt.Color(0, 0, 0));
        lblFooterView1.setOpaque(true);

        lblUpdatedFleets.setFont(new java.awt.Font("Segoe UI", 0, 48)); // NOI18N
        lblUpdatedFleets.setText("<html><b>Regular <em>Updates</em><span  font color=\"rgb(255, 179, 0)\">..</span></b></html> ");

        lblUpdatedFleetsDesc.setFont(new java.awt.Font("Gill Sans MT", 0, 12)); // NOI18N
        lblUpdatedFleetsDesc.setText("<html>We at <b>UBER <em>fleet</em><span  font color=\"rgb(255, 179, 0)\">..</span></b> constantly update our rides<br>so that you can reach your destination as fast and as comfortably as possible.<br>Don't believe us? Check for yourself below  :)</html> ");

        btnBackView1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnBackView1.setText("BACK");
        btnBackView1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBackView1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackView1ActionPerformed(evt);
            }
        });

        jTable1.setBackground(new java.awt.Color(255, 255, 255));
        jTable1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "RESULTS"
            }
        ));
        jScrollPane3.setViewportView(jTable1);

        lblBrands.setFont(new java.awt.Font("Segoe UI", 0, 48)); // NOI18N
        lblBrands.setText("<html><b>BRAND<span  font color=\"rgb(255, 179, 0)\">s</span></b></html>");

        lblBrandDesc.setFont(new java.awt.Font("Gill Sans MT", 0, 12)); // NOI18N
        lblBrandDesc.setText("<html>We at <b>UBER <em>fleet</em><span  font color=\"rgb(255, 179, 0)\">..</span></b> are committed to our customers' needs.<br>We have partnered with the top brands in the world to provide the best Infotainment experience to our customers on their journey.<br>Checkout our brand partnerships below!</html>");

        btnViewBrands.setBackground(new java.awt.Color(255, 255, 255));
        btnViewBrands.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnViewBrands.setForeground(new java.awt.Color(255, 179, 0));
        btnViewBrands.setText("View brands");
        btnViewBrands.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnViewBrands.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewBrandsActionPerformed(evt);
            }
        });

        btnLastUpdates.setBackground(new java.awt.Color(255, 255, 255));
        btnLastUpdates.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnLastUpdates.setForeground(new java.awt.Color(255, 179, 0));
        btnLastUpdates.setText("Last updates");
        btnLastUpdates.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLastUpdatesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout MoreOptionsPanelLayout = new javax.swing.GroupLayout(MoreOptionsPanel);
        MoreOptionsPanel.setLayout(MoreOptionsPanelLayout);
        MoreOptionsPanelLayout.setHorizontalGroup(
            MoreOptionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MoreOptionsPanelLayout.createSequentialGroup()
                .addGroup(MoreOptionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblFooterView1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(MoreOptionsPanelLayout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(MoreOptionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(MoreOptionsPanelLayout.createSequentialGroup()
                                .addGroup(MoreOptionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(MoreOptionsPanelLayout.createSequentialGroup()
                                        .addGap(107, 107, 107)
                                        .addComponent(btnViewBrands, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                                .addGroup(MoreOptionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(MoreOptionsPanelLayout.createSequentialGroup()
                                        .addGap(113, 113, 113)
                                        .addGroup(MoreOptionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblUpdatedFleetsDesc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(btnLastUpdates, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(MoreOptionsPanelLayout.createSequentialGroup()
                                        .addGap(100, 100, 100)
                                        .addComponent(lblUpdatedFleets, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(btnBackView1))
                        .addGap(0, 394, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(MoreOptionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(MoreOptionsPanelLayout.createSequentialGroup()
                    .addGap(3, 3, 3)
                    .addComponent(lblTitleView1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGap(3, 3, 3)))
            .addGroup(MoreOptionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(MoreOptionsPanelLayout.createSequentialGroup()
                    .addGap(91, 91, 91)
                    .addComponent(lblBrands, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(869, Short.MAX_VALUE)))
            .addGroup(MoreOptionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(MoreOptionsPanelLayout.createSequentialGroup()
                    .addGap(120, 120, 120)
                    .addComponent(lblBrandDesc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(375, Short.MAX_VALUE)))
        );
        MoreOptionsPanelLayout.setVerticalGroup(
            MoreOptionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MoreOptionsPanelLayout.createSequentialGroup()
                .addGap(131, 131, 131)
                .addComponent(btnBackView1)
                .addGroup(MoreOptionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(MoreOptionsPanelLayout.createSequentialGroup()
                        .addGap(153, 153, 153)
                        .addGroup(MoreOptionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblUpdatedFleets, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnViewBrands))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 63, Short.MAX_VALUE)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(lblFooterView1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MoreOptionsPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblUpdatedFleetsDesc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnLastUpdates)
                        .addGap(143, 143, 143))))
            .addGroup(MoreOptionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(MoreOptionsPanelLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(lblTitleView1, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(548, Short.MAX_VALUE)))
            .addGroup(MoreOptionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(MoreOptionsPanelLayout.createSequentialGroup()
                    .addGap(169, 169, 169)
                    .addComponent(lblBrands, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(417, Short.MAX_VALUE)))
            .addGroup(MoreOptionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(MoreOptionsPanelLayout.createSequentialGroup()
                    .addGap(239, 239, 239)
                    .addComponent(lblBrandDesc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(366, Short.MAX_VALUE)))
        );

        layeredPane.add(MoreOptionsPanel, "card6");

        AdminUpdatePanel.setBackground(new java.awt.Color(255, 255, 255));

        lblTitle3.setBackground(new java.awt.Color(0, 0, 0));
        lblTitle3.setFont(new java.awt.Font("Perpetua", 1, 48)); // NOI18N
        lblTitle3.setForeground(new java.awt.Color(255, 255, 255));
        lblTitle3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle3.setText("<html><b>Update</b> your <em>Fleet</em><span  font color=\"rgb(255, 179, 0)\"><b>..</b></span></html>");
        lblTitle3.setToolTipText("");
        lblTitle3.setOpaque(true);

        lblFooter3.setBackground(new java.awt.Color(0, 0, 0));
        lblFooter3.setOpaque(true);

        lblManufacturer2.setText("MANUFACTURER:");

        lblModel2.setText("MODEL:");

        lblSeats2.setText("SEATS:");

        lblSerialNo2.setText("SERIAL NUMBER:");

        lblModelNo2.setText("MODEL NUMBER:");

        lblLocation2.setText("LOCATION:");

        lblMaintCert2.setText("MAINTENANCE CERTIFICATE:");

        txtManufacturer2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        txtModel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        txtSeats2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        txtSerialNo2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txtSerialNo2.setEnabled(false);
        txtSerialNo2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSerialNo2ActionPerformed(evt);
            }
        });

        txtModelNo2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        btnSave2.setBackground(new java.awt.Color(215, 254, 211));
        btnSave2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnSave2.setForeground(new java.awt.Color(72, 151, 64));
        btnSave2.setText("UPDATE");
        btnSave2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSave2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSave2ActionPerformed(evt);
            }
        });

        lblManufactureYear2.setText("MANUFACTURE YEAR:");

        txtManufactureYear2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        btnBack2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnBack2.setText("BACK");
        btnBack2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBack2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBack2ActionPerformed(evt);
            }
        });

        drpLocSelect2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Allston", "Back Bay", "Bay Village", "Beacon Hill", "Brighton", "Charlestown","Fenway-Kenmore" }));

        rdBtnAvailability1.setText("YES");
        rdBtnAvailability1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdBtnAvailability1ActionPerformed(evt);
            }
        });

        lblAvailability1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblAvailability1.setText("Is this car available?");

        drpMaintCert2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {  "Expired", "Valid"  }));

        javax.swing.GroupLayout AdminUpdatePanelLayout = new javax.swing.GroupLayout(AdminUpdatePanel);
        AdminUpdatePanel.setLayout(AdminUpdatePanelLayout);
        AdminUpdatePanelLayout.setHorizontalGroup(
            AdminUpdatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblFooter3, javax.swing.GroupLayout.DEFAULT_SIZE, 1149, Short.MAX_VALUE)
            .addComponent(lblTitle3, javax.swing.GroupLayout.DEFAULT_SIZE, 1149, Short.MAX_VALUE)
            .addGroup(AdminUpdatePanelLayout.createSequentialGroup()
                .addGroup(AdminUpdatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AdminUpdatePanelLayout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(btnBack2)
                        .addGap(143, 143, 143)
                        .addGroup(AdminUpdatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(AdminUpdatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(AdminUpdatePanelLayout.createSequentialGroup()
                                    .addGap(57, 57, 57)
                                    .addComponent(lblManufacturer2))
                                .addComponent(lblManufactureYear2, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(lblSeats2, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(lblSerialNo2, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(lblModel2, javax.swing.GroupLayout.Alignment.TRAILING))
                            .addGroup(AdminUpdatePanelLayout.createSequentialGroup()
                                .addGap(61, 61, 61)
                                .addComponent(lblModelNo2))
                            .addComponent(lblLocation2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblMaintCert2, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(32, 32, 32)
                        .addGroup(AdminUpdatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(AdminUpdatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtManufacturer2)
                                .addComponent(txtModel2)
                                .addComponent(txtSeats2)
                                .addComponent(txtSerialNo2)
                                .addComponent(txtModelNo2)
                                .addComponent(txtManufactureYear2)
                                .addComponent(drpLocSelect2, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(drpMaintCert2, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(85, 85, 85)
                        .addGroup(AdminUpdatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(lblAvailability1, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rdBtnAvailability1)))
                    .addGroup(AdminUpdatePanelLayout.createSequentialGroup()
                        .addGap(340, 340, 340)
                        .addComponent(btnSave2, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        AdminUpdatePanelLayout.setVerticalGroup(
            AdminUpdatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AdminUpdatePanelLayout.createSequentialGroup()
                .addGroup(AdminUpdatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AdminUpdatePanelLayout.createSequentialGroup()
                        .addComponent(lblTitle3, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47)
                        .addGroup(AdminUpdatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(AdminUpdatePanelLayout.createSequentialGroup()
                                .addComponent(lblAvailability1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rdBtnAvailability1)
                                .addGap(267, 267, 267))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AdminUpdatePanelLayout.createSequentialGroup()
                                .addGroup(AdminUpdatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtManufacturer2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblManufacturer2))
                                .addGap(20, 20, 20)
                                .addGroup(AdminUpdatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtModel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblModel2))
                                .addGap(18, 18, 18)
                                .addGroup(AdminUpdatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtManufactureYear2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblManufactureYear2))
                                .addGap(23, 23, 23)
                                .addGroup(AdminUpdatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtSeats2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblSeats2))
                                .addGap(18, 18, 18)
                                .addGroup(AdminUpdatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtSerialNo2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblSerialNo2))
                                .addGap(18, 18, 18)
                                .addGroup(AdminUpdatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtModelNo2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblModelNo2))
                                .addGap(18, 18, 18)
                                .addGroup(AdminUpdatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(drpLocSelect2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblLocation2))
                                .addGap(18, 18, 18)
                                .addGroup(AdminUpdatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(drpMaintCert2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblMaintCert2)))))
                    .addGroup(AdminUpdatePanelLayout.createSequentialGroup()
                        .addGap(127, 127, 127)
                        .addComponent(btnBack2)))
                .addGap(30, 30, 30)
                .addComponent(btnSave2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 111, Short.MAX_VALUE)
                .addComponent(lblFooter3, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        layeredPane.add(AdminUpdatePanel, "card7");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(layeredPane)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(layeredPane)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        // TODO add your handling code here:

        if (flag.getUser().equals("ADMIN")) {
            flag.setLocation(drpLocation.getSelectedItem().toString());
            drpLocationFilter.setSelectedItem(flag.getLocation());
            layeredPane.removeAll();
            layeredPane.add(AdminDashboardPanel);
            layeredPane.revalidate();
            layeredPane.repaint();
            populateTable(flag.getLocation(), flag.getManufacturerFilter(), flag.getManufactureYearFilter(), flag.getMinSeatsFilter(), flag.getMaxSeatsFilter(), flag.getSerialNoFilter(), flag.getModelNoFilter(), false, flag.getExpiredMaintCert(), flag.getAvailability(), flag.getFindFirstCar());
        }
    }//GEN-LAST:event_btnSubmitActionPerformed

    private void txtSerialNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSerialNoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSerialNoActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        if (validations()) {
            Cars cars = fleet.addCars();
            cars.setManufacturer(txtManufacturer.getText());
            cars.setModel(txtModel.getText());
            cars.setManufactureYear(txtManufactureYear.getText());
            cars.setNumOfSeats(Integer.parseInt(txtSeats.getText()));
            cars.setSerialNum(txtSerialNo.getText());
            serialNumberList.add(txtSerialNo.getText());
            cars.setModelNum(txtModelNo.getText());
            cars.setLocation(drpLocSelect.getSelectedItem().toString());
            cars.setMaintCertExpiry(drpMaintCert.getSelectedItem().toString());
            if (rdBtnAvailability.isSelected()) {
                cars.setAvailability("YES");
            } else {
                cars.setAvailability("NO");
            }
            Calendar calendar = Calendar.getInstance();
            fleet.setUpdatedDateTime(calendar.getTime());
            JOptionPane.showMessageDialog(this, "Car added to the fleet!");
            txtManufacturer.setText("");
            txtModel.setText("");
            txtManufactureYear.setText("");
            txtSeats.setText("");
            txtSerialNo.setText("");
            txtModelNo.setText("");
            drpMaintCert.setSelectedItem(false);
            rdBtnAvailability.setSelected(false);
            layeredPane.removeAll();
            layeredPane.add(AdminDashboardPanel);
            layeredPane.validate();
            layeredPane.repaint();
            populateTable(flag.getLocation(), flag.getManufacturerFilter(), flag.getManufactureYearFilter(), flag.getMinSeatsFilter(), flag.getMaxSeatsFilter(), flag.getSerialNoFilter(), flag.getModelNoFilter(), false, flag.getExpiredMaintCert(), flag.getAvailability(), flag.getFindFirstCar());
        }


    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        layeredPane.removeAll();
        layeredPane.add(AdminDashboardPanel);
        layeredPane.validate();
        layeredPane.repaint();
        populateTable(flag.getLocation(), flag.getManufacturerFilter(), flag.getManufactureYearFilter(), flag.getMinSeatsFilter(), flag.getMaxSeatsFilter(), flag.getSerialNoFilter(), flag.getModelNoFilter(), false, flag.getExpiredMaintCert(), flag.getAvailability(), flag.getFindFirstCar());
    }//GEN-LAST:event_btnBackActionPerformed

    private void drpLocationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_drpLocationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_drpLocationActionPerformed

    private void txtSerialNoViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSerialNoViewActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSerialNoViewActionPerformed

    private void btnBackViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackViewActionPerformed
        // TODO add your handling code here:
        layeredPane.removeAll();
        layeredPane.add(AdminDashboardPanel);
        layeredPane.validate();
        layeredPane.repaint();
    }//GEN-LAST:event_btnBackViewActionPerformed

    private void rdBtnAvailabilityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdBtnAvailabilityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdBtnAvailabilityActionPerformed

    private void txtMaxSeatsFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMaxSeatsFocusLost
        // TODO add your handling code here:
        if (txtMaxSeats.getText().equals("")) {
            txtMaxSeats.setText("Max.");
            txtMaxSeats.setForeground(new Color(153, 153, 153));
        }
    }//GEN-LAST:event_txtMaxSeatsFocusLost

    private void txtMaxSeatsFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMaxSeatsFocusGained
        // TODO add your handling code here:
        if (txtMaxSeats.getText().equals("Max.")) {
            txtMaxSeats.setText("");
            txtMaxSeats.setForeground(new Color(0, 0, 0));
        }
    }//GEN-LAST:event_txtMaxSeatsFocusGained

    private void txtMinSeatsFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMinSeatsFocusLost
        // TODO add your handling code here:
        if (txtMinSeats.getText().equals("")) {
            txtMinSeats.setText("Min.");
            txtMinSeats.setForeground(new Color(153, 153, 153));
        }
    }//GEN-LAST:event_txtMinSeatsFocusLost

    private void txtMinSeatsFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMinSeatsFocusGained
        // TODO add your handling code here:
        if (txtMinSeats.getText().equals("Min.")) {
            txtMinSeats.setText("");
            txtMinSeats.setForeground(new Color(0, 0, 0));
        }
    }//GEN-LAST:event_txtMinSeatsFocusGained

    private void btnDetailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDetailActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblFleet.getSelectedRow();

        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Not so fast, select a row first!");
            return;
        }

        layeredPane.removeAll();
        layeredPane.add(AdminViewPanel);
        layeredPane.validate();
        layeredPane.repaint();
        DefaultTableModel model = (DefaultTableModel) tblFleet.getModel();
        Cars cars = (Cars) model.getValueAt(selectedRowIndex, 0);
        txtManufacturerView.setText(cars.getManufacturer());
        txtModelView.setText(cars.getModel());
        txtManufactureYearView.setText(cars.getManufactureYear());
        txtSeatsView.setText(String.valueOf(cars.getNumOfSeats()));
        txtSerialNoView.setText(cars.getSerialNum());
        txtModelNoView.setText(cars.getModelNum());
        txtLocationView.setText(cars.getLocation());
        txtMaincertView.setText(cars.getMaintCertExpiry());
    }//GEN-LAST:event_btnDetailActionPerformed

    private void btnSubmitAdvanceSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitAdvanceSearchActionPerformed
        // TODO add your handling code here:
        if (enableLocationFilter.isSelected()) {
            flag.setLocationFilter(drpLocationFilter.getSelectedItem().toString());
        }

        if (enableManufacturerFilter.isSelected()) {
            flag.setManufacturerFilter(drpManufacturerFilter.getSelectedItem().toString());
        }

        if (enableManufactureYearFilter.isSelected()) {
            flag.setManufactureYearFilter(drpManufacturerYearFilter.getSelectedItem().toString());
        }

        if (enableSeatsFilter.isSelected()) {
            if (!txtMinSeats.getText().isBlank() && !txtMinSeats.getText().isEmpty() && !txtMaxSeats.getText().isBlank() && !txtMaxSeats.getText().isEmpty()) {
                flag.setMinSeatsFilter(Integer.parseInt(txtMinSeats.getText()));
                flag.setMaxSeatsFilter(Integer.parseInt(txtMaxSeats.getText()));
            } else {
                flag.setMinSeatsFilter(0);
                flag.setMaxSeatsFilter(1000);
            }
        }

        if (enableSerialNoFilter.isSelected()) {
            flag.setSerialNoFilter(txtSerialNoFilter.getText());
        }

        if (enableModelNoFilter.isSelected()) {
            flag.setModelNoFilter(txtModelNoFilter.getText());
        }

        if (enableMaintCertFilter.isSelected()) {
            if (chkMaintCertFilterYes.isSelected()) {
                flag.setExpiredMaintCert("Expired");
                chkMaintCertFilterNo.setSelected(false);
            } else if (chkMaintCertFilterNo.isSelected()) {
                flag.setExpiredMaintCert("Valid");
                chkMaintCertFilterYes.setSelected(false);
            } else {
                flag.setExpiredMaintCert(null);
            }
        }

        if (enableAvailabilityFilter.isSelected()) {
            if (chkAvailabilityYes.isSelected()) {
                flag.setAvailability("YES");
            } else if (chkAvaiabilityNo.isSelected()) {
                flag.setAvailability("NO");
            } else {
                flag.setAvailability(null);
            }
        }
        populateTable(flag.getLocationFilter(), flag.getManufacturerFilter(), flag.getManufactureYearFilter(), flag.getMinSeatsFilter(), flag.getMaxSeatsFilter(), flag.getSerialNoFilter(), flag.getModelNoFilter(), true, flag.getExpiredMaintCert(), flag.getAvailability(), flag.getFindFirstCar());
    }//GEN-LAST:event_btnSubmitAdvanceSearchActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblFleet.getSelectedRow();

        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to delete.");
            return;
        }

        DefaultTableModel model = (DefaultTableModel) tblFleet.getModel();
        Cars car = (Cars) model.getValueAt(selectedRowIndex, 0);
        fleet.deleteCar(car);
        serialNumberList.remove(car.getSerialNum());
        JOptionPane.showMessageDialog(this, "Entry deleted from the fleet.");
        Calendar calendar = Calendar.getInstance();
        fleet.setUpdatedDateTime(calendar.getTime());
        populateTable(flag.getLocation(), flag.getManufacturerFilter(), flag.getManufactureYearFilter(), flag.getMinSeatsFilter(), flag.getMaxSeatsFilter(), flag.getSerialNoFilter(), flag.getModelNoFilter(), false, flag.getExpiredMaintCert(), flag.getAvailability(), flag.getFindFirstCar());
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        layeredPane.removeAll();
        layeredPane.add(AdminAddPanel);
        layeredPane.validate();
        layeredPane.repaint();
    }//GEN-LAST:event_btnAddActionPerformed

    private void toggleFilterOptionsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toggleFilterOptionsActionPerformed
        // TODO add your handling code here:
        if (toggleFilterOptions.isSelected()) {
            enableDisableVisibility(true);
        } else {
            enableDisableVisibility(false);
        }
    }//GEN-LAST:event_toggleFilterOptionsActionPerformed

    private void drpLocationFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_drpLocationFilterActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_drpLocationFilterActionPerformed

    private void enableLocationFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enableLocationFilterActionPerformed
        // TODO add your handling code here:
        if (isAnyRadioEnabled()) {
            btnSubmitAdvanceSearch.setVisible(true);
            btnClearFilter.setVisible(true);
        } else {
            btnSubmitAdvanceSearch.setVisible(false);
            btnClearFilter.setVisible(false);
        }
        if (enableLocationFilter.isSelected()) {
            lblLocationFilter.setVisible(true);
            drpLocationFilter.setVisible(true);

        } else {
            lblLocationFilter.setVisible(false);
            drpLocationFilter.setVisible(false);
        }
    }//GEN-LAST:event_enableLocationFilterActionPerformed

    private void enableManufacturerFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enableManufacturerFilterActionPerformed
        // TODO add your handling code here:

        if (isAnyRadioEnabled()) {
            btnSubmitAdvanceSearch.setVisible(true);
            btnClearFilter.setVisible(true);
        } else {
            btnSubmitAdvanceSearch.setVisible(false);
            btnClearFilter.setVisible(false);
        }

        if (enableManufacturerFilter.isSelected()) {
            lblManufacturerFilter.setVisible(true);
            drpManufacturerFilter.setVisible(true);
        } else {
            lblManufacturerFilter.setVisible(false);
            drpManufacturerFilter.setVisible(false);
        }
    }//GEN-LAST:event_enableManufacturerFilterActionPerformed

    private void enableManufactureYearFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enableManufactureYearFilterActionPerformed
        // TODO add your handling code here:
        if (isAnyRadioEnabled()) {
            btnSubmitAdvanceSearch.setVisible(true);
            btnClearFilter.setVisible(true);
        } else {
            btnSubmitAdvanceSearch.setVisible(false);
            btnClearFilter.setVisible(false);
        }

        if (enableManufactureYearFilter.isSelected()) {
            lblManufactureYearFilter.setVisible(true);
            drpManufacturerYearFilter.setVisible(true);
        } else {
            lblManufactureYearFilter.setVisible(false);
            drpManufacturerYearFilter.setVisible(false);
        }
    }//GEN-LAST:event_enableManufactureYearFilterActionPerformed

    private void enableSeatsFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enableSeatsFilterActionPerformed
        // TODO add your handling code here:
        if (isAnyRadioEnabled()) {
            btnSubmitAdvanceSearch.setVisible(true);
            btnClearFilter.setVisible(true);
        } else {
            btnSubmitAdvanceSearch.setVisible(false);
            btnClearFilter.setVisible(false);
        }

        if (enableSeatsFilter.isSelected()) {
            lblSeatsFilter.setVisible(true);
            txtMinSeats.setVisible(true);
            txtMaxSeats.setVisible(true);
        } else {
            lblSeatsFilter.setVisible(false);
            txtMinSeats.setVisible(false);
            txtMaxSeats.setVisible(false);
        }
    }//GEN-LAST:event_enableSeatsFilterActionPerformed

    private void enableSerialNoFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enableSerialNoFilterActionPerformed
        // TODO add your handling code here:
        if (isAnyRadioEnabled()) {
            btnSubmitAdvanceSearch.setVisible(true);
            btnClearFilter.setVisible(true);
        } else {
            btnSubmitAdvanceSearch.setVisible(false);
            btnClearFilter.setVisible(false);
        }

        if (enableSerialNoFilter.isSelected()) {
            lblSerialNoFilter.setVisible(true);
            txtSerialNoFilter.setVisible(true);
        } else {
            lblSerialNoFilter.setVisible(false);
            txtSerialNoFilter.setVisible(false);
        }
    }//GEN-LAST:event_enableSerialNoFilterActionPerformed

    private void enableModelNoFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enableModelNoFilterActionPerformed
        // TODO add your handling code here:
        if (isAnyRadioEnabled()) {
            btnSubmitAdvanceSearch.setVisible(true);
            btnClearFilter.setVisible(true);
        } else {
            btnSubmitAdvanceSearch.setVisible(false);
            btnClearFilter.setVisible(false);
        }

        if (enableModelNoFilter.isSelected()) {
            lblModelNoFilter.setVisible(true);
            txtModelNoFilter.setVisible(true);
        } else {
            lblModelNoFilter.setVisible(false);
            txtModelNoFilter.setVisible(false);
        }
    }//GEN-LAST:event_enableModelNoFilterActionPerformed

    private void btnClearFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearFilterActionPerformed
        // TODO add your handling code here:
        drpLocationFilter.setSelectedItem("--ALL LOCATIONS--");
        drpManufacturerFilter.setSelectedItem("--ALL--");
        drpManufacturerYearFilter.setSelectedItem("--ALL--");
        txtMaxSeats.setText("");
//        txtMaxSeats.setForeground(new Color(255, 255, 255));
        txtMinSeats.setText("");
//        txtMinSeats.setForeground(new Color(255, 255, 255));
        txtSerialNoFilter.setText("");
        txtModelNoFilter.setText("");
        chkMaintCertFilterYes.setSelected(false);
        chkMaintCertFilterNo.setSelected(false);
        chkAvailabilityYes.setSelected(false);
        chkAvaiabilityNo.setSelected(false);
    }//GEN-LAST:event_btnClearFilterActionPerformed

    private void drpManufacturerYearFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_drpManufacturerYearFilterActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_drpManufacturerYearFilterActionPerformed

    private void enableMaintCertFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enableMaintCertFilterActionPerformed
        // TODO add your handling code here:
        if (isAnyRadioEnabled()) {
            btnSubmitAdvanceSearch.setVisible(true);
            btnClearFilter.setVisible(true);
        } else {
            btnSubmitAdvanceSearch.setVisible(false);
            btnClearFilter.setVisible(false);
        }

        if (enableMaintCertFilter.isSelected()) {
            lblMaintCertFilter.setVisible(true);
            chkMaintCertFilterYes.setVisible(true);
            chkMaintCertFilterNo.setVisible(true);
        } else {
            lblMaintCertFilter.setVisible(false);
            chkMaintCertFilterYes.setVisible(false);
            chkMaintCertFilterNo.setVisible(false);
        }
    }//GEN-LAST:event_enableMaintCertFilterActionPerformed

    private void chkMaintCertFilterYesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkMaintCertFilterYesActionPerformed
        // TODO add your handling code here:
        chkMaintCertFilterNo.setSelected(false);
    }//GEN-LAST:event_chkMaintCertFilterYesActionPerformed

    private void chkMaintCertFilterNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkMaintCertFilterNoActionPerformed
        // TODO add your handling code here:
        chkMaintCertFilterYes.setSelected(false);
    }//GEN-LAST:event_chkMaintCertFilterNoActionPerformed

    private void chkAvailabilityYesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkAvailabilityYesActionPerformed
        // TODO add your handling code here:
        chkAvaiabilityNo.setSelected(false);
    }//GEN-LAST:event_chkAvailabilityYesActionPerformed

    private void chkAvaiabilityNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkAvaiabilityNoActionPerformed
        // TODO add your handling code here:
        chkAvailabilityYes.setSelected(false);
    }//GEN-LAST:event_chkAvaiabilityNoActionPerformed

    private void enableAvailabilityFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enableAvailabilityFilterActionPerformed
        // TODO add your handling code here:
        if (isAnyRadioEnabled()) {
            btnSubmitAdvanceSearch.setVisible(true);
            btnClearFilter.setVisible(true);
        } else {
            btnSubmitAdvanceSearch.setVisible(false);
            btnClearFilter.setVisible(false);
        }
        if (enableAvailabilityFilter.isSelected()) {
            lblAvaiabilityFilter.setVisible(true);
            chkAvailabilityYes.setVisible(true);
            chkAvaiabilityNo.setVisible(true);
        } else {
            lblAvaiabilityFilter.setVisible(false);
            chkAvailabilityYes.setVisible(false);
            chkAvaiabilityNo.setVisible(false);
        }
    }//GEN-LAST:event_enableAvailabilityFilterActionPerformed

    private void tglFindRideActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tglFindRideActionPerformed
        // TODO add your handling code here:
        if (fleet.getFleet() == null || fleet.getFleet().isEmpty()) {
            JOptionPane.showMessageDialog(this, "There are no cars in the fleet!");
        } else {
            populateTable(flag.getLocation(), flag.getManufacturerFilter(), flag.getManufactureYearFilter(), flag.getMinSeatsFilter(), flag.getMaxSeatsFilter(), flag.getSerialNoFilter(), flag.getModelNoFilter(), false, flag.getExpiredMaintCert(), flag.getAvailability(), flag.getFindFirstCar());
        }
    }//GEN-LAST:event_tglFindRideActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if (fleet.getFleet() == null || fleet.getFleet().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Hang On! Add a car to your fleet first!");
        } else {
            layeredPane.removeAll();
            layeredPane.add(MoreOptionsPanel);
            layeredPane.revalidate();
            layeredPane.repaint();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnBackView1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackView1ActionPerformed
        // TODO add your handling code here:
        layeredPane.removeAll();
        layeredPane.add(AdminDashboardPanel);
        layeredPane.revalidate();
        layeredPane.repaint();
    }//GEN-LAST:event_btnBackView1ActionPerformed

    private void btnViewBrandsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewBrandsActionPerformed
        // TODO add your handling code here:
        populateResults();
    }//GEN-LAST:event_btnViewBrandsActionPerformed

    private void btnLastUpdatesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLastUpdatesActionPerformed
        // TODO add your handling code here:
        populateResultsDate();
    }//GEN-LAST:event_btnLastUpdatesActionPerformed

    private void btnImportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImportActionPerformed
        // TODO add your handling code here:
        JFileChooser browseFile = new JFileChooser();
        int showDialogue = browseFile.showOpenDialog(null);

        if (showDialogue == JFileChooser.APPROVE_OPTION) {
            File file = browseFile.getSelectedFile();
            String selectedImagePath = file.getAbsolutePath();
            JOptionPane.showConfirmDialog(this, "Import this file?");

            try {
                FileReader reader = new FileReader(file);
                BufferedReader bufferefReader = new BufferedReader(reader);
                DefaultTableModel model = (DefaultTableModel) tblFleet.getModel();
                Object[] lines = bufferefReader.lines().toArray();

                for (int i = 0; i < lines.length; i++) {
                    String[] row = lines[i].toString().split(" ");
                    Cars importedCars = fleet.addCars();
                    importedCars.setManufacturer((String) row[0]);
                    importedCars.setModel((String) row[1]);
                    importedCars.setManufactureYear((String) row[2]);
                    importedCars.setNumOfSeats(Integer.valueOf(row[3]));
                    importedCars.setSerialNum((String) row[4]);
                    importedCars.setModelNum((String) row[5]);
                    importedCars.setLocation((String) row[6]);
                    importedCars.setMaintCertExpiry((String) row[7]);
                    importedCars.setAvailability((String) row[8]);
                    Calendar calendar = Calendar.getInstance();
                    fleet.setUpdatedDateTime(calendar.getTime());
                    populateTable(flag.getLocation(), flag.getManufacturerFilter(), flag.getManufactureYearFilter(), flag.getMinSeatsFilter(), flag.getMaxSeatsFilter(), flag.getSerialNoFilter(), flag.getModelNoFilter(), false, flag.getExpiredMaintCert(), flag.getAvailability(), flag.getFindFirstCar());
                }

            } catch (FileNotFoundException ex) {
                Logger.getLogger(LocationPanel.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }//GEN-LAST:event_btnImportActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblFleet.getSelectedRow();

        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to update.");
            return;
        }

        layeredPane.removeAll();
        layeredPane.add(AdminUpdatePanel);
        layeredPane.revalidate();
        layeredPane.repaint();

        DefaultTableModel model = (DefaultTableModel) tblFleet.getModel();
        Cars cars = (Cars) model.getValueAt(selectedRowIndex, 0);
        txtManufacturer2.setText(cars.getManufacturer());
        txtModel2.setText(cars.getModel());
        txtManufactureYear2.setText(cars.getManufactureYear());
        txtSeats2.setText(String.valueOf(cars.getNumOfSeats()));
        txtSerialNo2.setText(cars.getSerialNum());
        flag.setSerialNumber(cars.getSerialNum());
        txtModelNo2.setText(cars.getModelNum());
        drpLocSelect2.setSelectedItem(cars.getLocation());
        drpMaintCert2.setSelectedItem(cars.getMaintCertExpiry());
        if (cars.getAvailability() != null && cars.getAvailability().equals("YES")) {
            rdBtnAvailability1.setSelected(true);
        } else {
            rdBtnAvailability1.setSelected(false);
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void txtSerialNo2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSerialNo2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSerialNo2ActionPerformed

    private void btnSave2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSave2ActionPerformed
        // TODO add your handling code here:
        if (validationsForUpdate()) {
            Cars updatedCar = new Cars();
            updatedCar.setManufacturer(txtManufacturer2.getText());
            updatedCar.setModel(txtModel2.getText());
            updatedCar.setManufactureYear(txtManufactureYear2.getText());
            updatedCar.setNumOfSeats(Integer.parseInt(txtSeats2.getText()));
            updatedCar.setSerialNum(flag.getSerialNumber());
            updatedCar.setModelNum(txtModelNo2.getText());
            updatedCar.setLocation(drpLocSelect2.getSelectedItem().toString());
            updatedCar.setMaintCertExpiry(drpMaintCert2.getSelectedItem().toString());
            if (rdBtnAvailability1.isSelected()) {
                updatedCar.setAvailability("YES");
            } else {
                updatedCar.setAvailability("NO");
            }

            for (int i = 0; i <= fleet.getFleet().size() - 1; i++) {
                System.out.println(fleet.getFleet().size() - 1);
                System.out.println(txtSerialNo2);
                if (fleet.getFleet().get(i).getSerialNum().equals(txtSerialNo2.getText())) {
                    fleet.getFleet().set(i, updatedCar);
                }
            }

            Calendar calendar = Calendar.getInstance();
            fleet.setUpdatedDateTime(calendar.getTime());

            JOptionPane.showMessageDialog(this, "Fleet updated!");

            layeredPane.removeAll();
            layeredPane.add(AdminDashboardPanel);
            layeredPane.validate();
            layeredPane.repaint();
            populateTable(flag.getLocation(), flag.getManufacturerFilter(), flag.getManufactureYearFilter(), flag.getMinSeatsFilter(), flag.getMaxSeatsFilter(), flag.getSerialNoFilter(), flag.getModelNoFilter(), false, flag.getExpiredMaintCert(), flag.getAvailability(), flag.getFindFirstCar());
        }

    }//GEN-LAST:event_btnSave2ActionPerformed

    private void btnBack2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBack2ActionPerformed
        // TODO add your handling code here:
        layeredPane.removeAll();
        layeredPane.add(AdminDashboardPanel);
        layeredPane.revalidate();
        layeredPane.repaint();
    }//GEN-LAST:event_btnBack2ActionPerformed

    private void rdBtnAvailability1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdBtnAvailability1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdBtnAvailability1ActionPerformed

    private void txtMinSeatsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMinSeatsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMinSeatsActionPerformed

    private void drpManufacturerFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_drpManufacturerFilterActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_drpManufacturerFilterActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel AdminAddPanel;
    private javax.swing.JPanel AdminDashboardPanel;
    private javax.swing.JPanel AdminUpdatePanel;
    private javax.swing.JPanel AdminViewPanel;
    private javax.swing.JPanel LocationPanel;
    private javax.swing.JPanel MoreOptionsPanel;
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnBack2;
    private javax.swing.JButton btnBackView;
    private javax.swing.JButton btnBackView1;
    private javax.swing.JButton btnClearFilter;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnDetail;
    private javax.swing.JButton btnImport;
    private javax.swing.JButton btnLastUpdates;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnSave2;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JButton btnSubmitAdvanceSearch;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnViewBrands;
    private javax.swing.JCheckBox chkAvaiabilityNo;
    private javax.swing.JCheckBox chkAvailabilityYes;
    private javax.swing.JCheckBox chkMaintCertFilterNo;
    private javax.swing.JCheckBox chkMaintCertFilterYes;
    private javax.swing.JComboBox<String> drpLocSelect;
    private javax.swing.JComboBox<String> drpLocSelect2;
    private javax.swing.JComboBox<String> drpLocation;
    private javax.swing.JComboBox<String> drpLocationFilter;
    private javax.swing.JComboBox<String> drpMaintCert;
    private javax.swing.JComboBox<String> drpMaintCert2;
    private javax.swing.JComboBox<String> drpManufacturerFilter;
    private javax.swing.JComboBox<String> drpManufacturerYearFilter;
    private javax.swing.JRadioButton enableAvailabilityFilter;
    private javax.swing.JRadioButton enableLocationFilter;
    private javax.swing.JRadioButton enableMaintCertFilter;
    private javax.swing.JRadioButton enableManufactureYearFilter;
    private javax.swing.JRadioButton enableManufacturerFilter;
    private javax.swing.JRadioButton enableModelNoFilter;
    private javax.swing.JRadioButton enableSeatsFilter;
    private javax.swing.JRadioButton enableSerialNoFilter;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JLayeredPane layeredPane;
    private javax.swing.JLabel lblAvaiabilityFilter;
    private javax.swing.JLabel lblAvailability;
    private javax.swing.JLabel lblAvailability1;
    private javax.swing.JLabel lblBrandDesc;
    private javax.swing.JLabel lblBrands;
    private javax.swing.JLabel lblFooter;
    private javax.swing.JLabel lblFooter1;
    private javax.swing.JLabel lblFooter2;
    private javax.swing.JLabel lblFooter3;
    private javax.swing.JLabel lblFooterView;
    private javax.swing.JLabel lblFooterView1;
    private javax.swing.JLabel lblHeader;
    private javax.swing.JLabel lblLocation;
    private javax.swing.JLabel lblLocation2;
    private javax.swing.JLabel lblLocationFilter;
    private javax.swing.JLabel lblLocationView;
    private javax.swing.JLabel lblMaintCert;
    private javax.swing.JLabel lblMaintCert2;
    private javax.swing.JLabel lblMaintCertFilter;
    private javax.swing.JLabel lblMaintCertView;
    private javax.swing.JLabel lblManufactureYear;
    private javax.swing.JLabel lblManufactureYear2;
    private javax.swing.JLabel lblManufactureYearFilter;
    private javax.swing.JLabel lblManufactureYearVIew;
    private javax.swing.JLabel lblManufacturer;
    private javax.swing.JLabel lblManufacturer2;
    private javax.swing.JLabel lblManufacturerFilter;
    private javax.swing.JLabel lblManufacturerView;
    private javax.swing.JLabel lblModel;
    private javax.swing.JLabel lblModel2;
    private javax.swing.JLabel lblModelNo;
    private javax.swing.JLabel lblModelNo2;
    private javax.swing.JLabel lblModelNoFilter;
    private javax.swing.JLabel lblModelNoView;
    private javax.swing.JLabel lblModelView;
    private javax.swing.JLabel lblSeats;
    private javax.swing.JLabel lblSeats2;
    private javax.swing.JLabel lblSeatsFilter;
    private javax.swing.JLabel lblSeatsView;
    private javax.swing.JLabel lblSerialNo;
    private javax.swing.JLabel lblSerialNo2;
    private javax.swing.JLabel lblSerialNoFilter;
    private javax.swing.JLabel lblSerialNoView;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblTitle1;
    private javax.swing.JLabel lblTitle2;
    private javax.swing.JLabel lblTitle3;
    private javax.swing.JLabel lblTitleView;
    private javax.swing.JLabel lblTitleView1;
    private javax.swing.JLabel lblUpdatedFleets;
    private javax.swing.JLabel lblUpdatedFleetsDesc;
    private javax.swing.JPanel panel;
    private javax.swing.JRadioButton rdBtnAvailability;
    private javax.swing.JRadioButton rdBtnAvailability1;
    private javax.swing.JTable tblFleet;
    private javax.swing.JToggleButton tglFindRide;
    private javax.swing.JToggleButton toggleFilterOptions;
    private javax.swing.JTextField txtLocationView;
    private javax.swing.JTextField txtMaincertView;
    private javax.swing.JTextField txtManufactureYear;
    private javax.swing.JTextField txtManufactureYear2;
    private javax.swing.JTextField txtManufactureYearView;
    private javax.swing.JTextField txtManufacturer;
    private javax.swing.JTextField txtManufacturer2;
    private javax.swing.JTextField txtManufacturerView;
    private javax.swing.JTextField txtMaxSeats;
    private javax.swing.JTextField txtMinSeats;
    private javax.swing.JTextField txtModel;
    private javax.swing.JTextField txtModel2;
    private javax.swing.JTextField txtModelNo;
    private javax.swing.JTextField txtModelNo2;
    private javax.swing.JTextField txtModelNoFilter;
    private javax.swing.JTextField txtModelNoView;
    private javax.swing.JTextField txtModelView;
    private javax.swing.JTextField txtSeats;
    private javax.swing.JTextField txtSeats2;
    private javax.swing.JTextField txtSeatsView;
    private javax.swing.JTextField txtSerialNo;
    private javax.swing.JTextField txtSerialNo2;
    private javax.swing.JTextField txtSerialNoFilter;
    private javax.swing.JTextField txtSerialNoView;
    // End of variables declaration//GEN-END:variables

    private void populateTable(String locationFilter, String manufacturer, String manufactureYear, int minSeats, int maxSeats, String serialNo, String modelNo, boolean filterEnabled, String maintCert, String availability, String findFirstCar) {
        DefaultTableModel model = (DefaultTableModel) tblFleet.getModel();
        model.setRowCount(0);
        int selectedRowIndex = tblFleet.getSelectedRow();

        if (filterEnabled && !tglFindRide.isSelected()) {
            ArrayList<Cars> filteredList = filteredList(locationFilter, manufacturer, manufactureYear, minSeats, maxSeats, serialNo, modelNo, maintCert, availability);
            for (Cars cars : filteredList) {
                Object[] row = new Object[8];
                row[0] = cars;
                row[1] = cars.getModel();
                row[2] = cars.getManufactureYear();
                row[3] = cars.getNumOfSeats();
                row[4] = cars.getSerialNum();
                row[5] = cars.getModelNum();
                row[6] = cars.getLocation();
                row[7] = cars.getAvailability();
                model.addRow(row);
            }
        } else if (tglFindRide.isSelected()) {
            for (Cars cars : fleet.getFleet()) {
                if (flag.getLocationFilter() != null) {
                    if (cars.getLocation().equals(flag.getLocationFilter()) && !cars.getAvailability().equals("NO")) {
                        Object[] row = new Object[8];
                        row[0] = cars;
                        row[1] = cars.getModel();
                        row[2] = cars.getManufactureYear();
                        row[3] = cars.getNumOfSeats();
                        row[4] = cars.getSerialNum();
                        row[5] = cars.getModelNum();
                        row[6] = cars.getLocation();
                        row[7] = cars.getAvailability();
                        model.addRow(row);
                        break;
                    }
                } else {
                    if (cars.getLocation().equals(flag.getLocation()) && !cars.getAvailability().equals("NO")) {
                        Object[] row = new Object[8];
                        row[0] = cars;
                        row[1] = cars.getModel();
                        row[2] = cars.getManufactureYear();
                        row[3] = cars.getNumOfSeats();
                        row[4] = cars.getSerialNum();
                        row[5] = cars.getModelNum();
                        row[6] = cars.getLocation();
                        row[7] = cars.getAvailability();
                        model.addRow(row);
                        break;
                    }
                }
            }
        } else {
            for (Cars cars : fleet.getFleet()) {
                Object[] row = new Object[8];
                row[0] = cars;
                row[1] = cars.getModel();
                row[2] = cars.getManufactureYear();
                row[3] = cars.getNumOfSeats();
                row[4] = cars.getSerialNum();
                row[5] = cars.getModelNum();
                row[6] = cars.getLocation();
                row[7] = cars.getAvailability();
                model.addRow(row);
            }
        }
    }

    public ArrayList<Cars> filteredList(String locationFilter, String manufacturer, String manufactureYear, int minSeats, int maxSeats, String serialNo, String modelNo, String maintCert, String availability) {
        ArrayList<Cars> filteredList = new ArrayList<>();
        ArrayList<Cars> finalFilteredList = new ArrayList<>();
        ArrayList<Cars> returnedList = new ArrayList<>();

        for (Cars cars : fleet.getFleet()) {

            if (locationFilter != null && !locationFilter.isBlank() && !locationFilter.isEmpty() && !locationFilter.equals("--ALL LOCATIONS--")) {
                if (!cars.getLocation().equals(locationFilter)) {
                    filteredList.add(cars);
                }
            }

            if (manufacturer != null && !manufacturer.isBlank() && !manufacturer.isBlank() && !manufacturer.equals("--ALL--")) {
                if (!cars.getManufacturer().equals(manufacturer)) {
                    filteredList.add(cars);
                }
            }

            if (manufactureYear != null && !manufactureYear.isEmpty() && !manufactureYear.isBlank() && !manufactureYear.equals("--ALL--")) {
                if (!cars.getManufactureYear().equals(manufactureYear)) {
                    filteredList.add(cars);
                }
            }

//            if (String.valueOf(minSeats) != null && !String.valueOf(minSeats).isEmpty() && String.valueOf(minSeats).isBlank() && String.valueOf(maxSeats) != null && !String.valueOf(maxSeats).isEmpty() && !String.valueOf(maxSeats).isBlank()) {
//                if (cars.getNumOfSeats() < minSeats && cars.getNumOfSeats() > maxSeats) {
//                    filteredList.add(cars);
//                }
//            }
            if (serialNo != null && !serialNo.isEmpty() && !serialNo.isBlank()) {
                if (!cars.getSerialNum().equals(serialNo)) {
                    filteredList.add(cars);
                }
            }

            if (modelNo != null && !modelNo.isEmpty() && !modelNo.isBlank()) {
                if (!cars.getModelNum().equals(modelNo)) {
                    filteredList.add(cars);
                }
            }

            if (maintCert != null && !maintCert.isEmpty() && !maintCert.isBlank()) {
                if (!cars.getMaintCertExpiry().equals(maintCert)) {
                    filteredList.add(cars);
                }
            }

            if (availability != null && !availability.isEmpty() && !availability.isBlank()) {
                if (!cars.getAvailability().equals(availability)) {
                    filteredList.add(cars);
                }
            }

        }

        finalFilteredList.addAll(fleet.getFleet());
        finalFilteredList.removeAll(filteredList);

        if (!String.valueOf(minSeats).equals("Min.") && !String.valueOf(maxSeats).equals("Max.")) {
            for (Cars cars : finalFilteredList) {
                if (txtMinSeats.getText().equals("") && txtMaxSeats.getText().equals("")) {
                    if (cars.getNumOfSeats() >= 0 && cars.getNumOfSeats() <= 1000) {
                        returnedList.add(cars);
                    }
                } else if (cars.getNumOfSeats() >= minSeats && cars.getNumOfSeats() <= maxSeats) {
                    returnedList.add(cars);
                }
            }

        }

        if ((returnedList != null && !returnedList.isEmpty()) || enableSeatsFilter.isSelected()) {
            return returnedList;
        } else {
            return finalFilteredList;
        }

    }

    public Fleet returnFleetList() {
        return fleet;
    }

    public void enableDisableVisibility(boolean visibility) {
        enableLocationFilter.setVisible(visibility);
        enableManufacturerFilter.setVisible(visibility);
        enableManufactureYearFilter.setVisible(visibility);
        enableSeatsFilter.setVisible(visibility);
        enableSerialNoFilter.setVisible(visibility);
        enableModelNoFilter.setVisible(visibility);
        enableMaintCertFilter.setVisible(visibility);
        enableAvailabilityFilter.setVisible(visibility);

        if (!visibility) {
            enableLocationFilter.setSelected(false);
            enableManufacturerFilter.setSelected(false);
            enableManufactureYearFilter.setSelected(false);
            enableSeatsFilter.setSelected(false);
            enableSerialNoFilter.setSelected(false);
            enableModelNoFilter.setSelected(false);
            enableMaintCertFilter.setSelected(false);
            enableAvailabilityFilter.setSelected(false);
            lblLocationFilter.setVisible(visibility);
            drpLocationFilter.setVisible(visibility);
            lblManufacturerFilter.setVisible(visibility);
            drpManufacturerFilter.setVisible(visibility);
            lblManufactureYearFilter.setVisible(visibility);
            drpManufacturerYearFilter.setVisible(visibility);
            lblSeatsFilter.setVisible(visibility);
            txtMinSeats.setVisible(visibility);
            txtMaxSeats.setVisible(visibility);
            lblSerialNoFilter.setVisible(visibility);
            txtSerialNoFilter.setVisible(visibility);
            lblModelNoFilter.setVisible(visibility);
            txtModelNoFilter.setVisible(visibility);
            lblMaintCertFilter.setVisible(visibility);
            chkMaintCertFilterYes.setVisible(visibility);
            chkMaintCertFilterNo.setVisible(visibility);
            lblAvaiabilityFilter.setVisible(visibility);
            chkAvailabilityYes.setVisible(visibility);
            chkAvaiabilityNo.setVisible(visibility);
            btnSubmitAdvanceSearch.setVisible(visibility);
            btnClearFilter.setVisible(visibility);
        }
    }

    public boolean isAnyRadioEnabled() {
        if (enableLocationFilter.isSelected() || enableManufacturerFilter.isEnabled() || enableManufactureYearFilter.isEnabled() || enableSeatsFilter.isSelected() || enableSerialNoFilter.isSelected() || enableModelNoFilter.isEnabled()) {
            return true;
        } else {
            return false;
        }
    }

    private void populateResults() {
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);
        List<String> manufacturers = new ArrayList<>();
        for (Cars cars : fleet.getFleet()) {
            manufacturers.add(cars.getManufacturer());
        }
        List<String> dedupeList = manufacturers.stream().distinct().collect(Collectors.toList());
        for (String cars : dedupeList) {
            Object[] row = new Object[1];
            row[0] = cars;
            model.addRow(row);
        }
    }

    private void populateResultsDate() {
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);
        Object[] row = new Object[1];
        row[0] = fleet.getUpdatedDateTime();
        model.addRow(row);
    }

    private boolean validations() {
        boolean validData = true;

        if (txtManufacturer == null || txtManufacturer.getText().isBlank() || txtManufacturer.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Enter the Manufacturer.");
            validData = false;
            return validData;
        } else if (txtModel == null || txtModel.getText().isBlank() || txtModel.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Enter the Model.");
            validData = false;
            return validData;
        } else if (!(validateManufactureYear(txtManufactureYear.getText()))) {
            JOptionPane.showMessageDialog(this, "Enter a valid Manufacture Year.");
            validData = false;
            return validData;
        } else if (txtSeats.getText().isBlank() || txtSeats.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Enter valid number of seats.");
            validData = false;
            return validData;
        } else if (txtSerialNo.getText().isBlank() || txtSerialNo.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Enter a Serial Number.");
            validData = false;
            return validData;
        } else if (serialNumberList.contains(txtSerialNo.getText())) {
            JOptionPane.showMessageDialog(this, "Serial Number already in use.");
            validData = false;
            return validData;
        } else if (txtModelNo.getText().isBlank() || txtModelNo.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Enter a valid Model Number.");
            validData = false;
            return validData;
        } else {
            return true;
        }
    }

    private boolean validationsForUpdate() {
        boolean validData = true;

        if (txtManufacturer2 == null || txtManufacturer2.getText().isBlank() || txtManufacturer2.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Enter the Manufacturer.");
            validData = false;
            return validData;
        } else if (txtModel2 == null || txtModel2.getText().isBlank() || txtModel2.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Enter the Model.");
            validData = false;
            return validData;
        } else if (!(validateManufactureYear(txtManufactureYear2.getText()))) {
            JOptionPane.showMessageDialog(this, "Enter a valid Manufacture Year.");
            validData = false;
            return validData;
        } else if (txtSeats2.getText().isBlank() || txtSeats2.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Enter valid number of seats.");
            validData = false;
            return validData;
        } else if (txtModelNo2.getText().isBlank() || txtModelNo2.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Enter a valid Model Number.");
            validData = false;
            return validData;
        } else {
            return true;
        }
    }

    private boolean validateManufactureYear(String year) {
        if (year.isBlank() || year.isEmpty()) {
            return false;
        } else if (Integer.parseInt(year) < 2000 || Integer.parseInt(year) > 2021) {
            return false;
        }
        return true;
    }

    private boolean validateSerialNumber(String serialNumber) {
        if (serialNumber.isBlank() || serialNumber.isEmpty()) {
            return false;
        } else if (serialNumberList.contains(serialNumber)) {
            return false;
        }
        return true;
    }

}
