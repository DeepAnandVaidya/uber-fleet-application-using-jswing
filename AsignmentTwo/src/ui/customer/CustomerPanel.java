/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.customer;

import java.awt.Color;
import java.util.ArrayList;
import java.util.List;
import java.util.stream.Collectors;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Cars;
import model.Flags;
import model.Fleet;

/**
 *
 * @author deepv
 */
public class CustomerPanel extends javax.swing.JPanel {

    /**
     * Creates new form CustomerPanel
     */
    Flags flag;
    Fleet fleet;

    public CustomerPanel(Flags flag, Fleet fleet) {
        initComponents();
        this.flag = flag;
        this.fleet = fleet;

        lblLocationFilter2.setVisible(false);
        drpLocationFilter2.setVisible(false);

        lblManufacturerFilter2.setVisible(false);
        drpManufacturerFilter2.setVisible(false);

        lblManufactureYearFilter2.setVisible(false);
        drpManufacturerYearFilter2.setVisible(false);

        lblSeatsFilter2.setVisible(false);
        txtMinSeats2.setVisible(false);
        txtMaxSeats2.setVisible(false);

        lblSerialNoFilter2.setVisible(false);
        txtSerialNoFilter2.setVisible(false);

        lblModelNoFilter2.setVisible(false);
        txtModelNoFilter2.setVisible(false);

        lblMaintCertFilter2.setVisible(false);
        chkMaintCertFilterYes2.setVisible(false);
        chkMaintCertFilterNo2.setVisible(false);

        lblAvaiabilityFilter2.setVisible(false);
        chkAvailabilityYes2.setVisible(false);
        chkAvaiabilityNo2.setVisible(false);

        btnSubmitAdvanceSearch2.setVisible(false);

        enableLocationFilter2.setVisible(false);
        enableManufacturerFilter2.setVisible(false);
        enableManufactureYearFilter2.setVisible(false);
        enableSeatsFilter2.setVisible(false);
        enableSerialNoFilter2.setVisible(false);
        enableModelNoFilter2.setVisible(false);
        enableMaintCertFilter2.setVisible(false);
        enableAvailabilityFilter2.setVisible(false);
        btnClearFilter2.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        layeredPane = new javax.swing.JLayeredPane();
        CustomerLocationPanel = new javax.swing.JPanel();
        lblHeader = new javax.swing.JLabel();
        lblTitle1 = new javax.swing.JLabel();
        drpLocation = new javax.swing.JComboBox<>();
        btnSubmit = new javax.swing.JButton();
        lblFooter = new javax.swing.JLabel();
        CustomerDashboardPanel = new javax.swing.JPanel();
        lblTitle = new javax.swing.JLabel();
        jScrollPane8 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        tblFleet2 = new javax.swing.JTable();
        btnDetail3 = new javax.swing.JButton();
        toggleFilterOptions2 = new javax.swing.JToggleButton();
        enableLocationFilter2 = new javax.swing.JRadioButton();
        enableManufacturerFilter2 = new javax.swing.JRadioButton();
        enableManufactureYearFilter2 = new javax.swing.JRadioButton();
        enableSeatsFilter2 = new javax.swing.JRadioButton();
        enableSerialNoFilter2 = new javax.swing.JRadioButton();
        enableModelNoFilter2 = new javax.swing.JRadioButton();
        enableMaintCertFilter2 = new javax.swing.JRadioButton();
        enableAvailabilityFilter2 = new javax.swing.JRadioButton();
        btnClearFilter2 = new javax.swing.JButton();
        btnSubmitAdvanceSearch2 = new javax.swing.JButton();
        lblLocationFilter2 = new javax.swing.JLabel();
        drpLocationFilter2 = new javax.swing.JComboBox<>();
        lblManufacturerFilter2 = new javax.swing.JLabel();
        drpManufacturerFilter2 = new javax.swing.JComboBox<>();
        lblManufactureYearFilter2 = new javax.swing.JLabel();
        drpManufacturerYearFilter2 = new javax.swing.JComboBox<>();
        lblMaintCertFilter2 = new javax.swing.JLabel();
        chkMaintCertFilterYes2 = new javax.swing.JCheckBox();
        chkMaintCertFilterNo2 = new javax.swing.JCheckBox();
        lblSeatsFilter2 = new javax.swing.JLabel();
        txtMinSeats2 = new javax.swing.JTextField();
        txtMaxSeats2 = new javax.swing.JTextField();
        lblSerialNoFilter2 = new javax.swing.JLabel();
        txtSerialNoFilter2 = new javax.swing.JTextField();
        lblModelNoFilter2 = new javax.swing.JLabel();
        txtModelNoFilter2 = new javax.swing.JTextField();
        lblAvaiabilityFilter2 = new javax.swing.JLabel();
        chkAvailabilityYes2 = new javax.swing.JCheckBox();
        chkAvaiabilityNo2 = new javax.swing.JCheckBox();
        jButton3 = new javax.swing.JButton();
        tglFindRide2 = new javax.swing.JToggleButton();
        lblFooter5 = new javax.swing.JLabel();
        CustomerViewPanel = new javax.swing.JPanel();
        lblManufacturerView = new javax.swing.JLabel();
        lblModelView = new javax.swing.JLabel();
        lblSeatsView = new javax.swing.JLabel();
        lblSerialNoView = new javax.swing.JLabel();
        lblModelNoView = new javax.swing.JLabel();
        lblLocationView = new javax.swing.JLabel();
        lblMaintCertView = new javax.swing.JLabel();
        txtManufacturerView = new javax.swing.JTextField();
        txtModelView = new javax.swing.JTextField();
        txtSeatsView = new javax.swing.JTextField();
        txtSerialNoView = new javax.swing.JTextField();
        txtModelNoView = new javax.swing.JTextField();
        txtMaincertView = new javax.swing.JTextField();
        lblManufactureYearVIew = new javax.swing.JLabel();
        txtManufactureYearView = new javax.swing.JTextField();
        btnBackView = new javax.swing.JButton();
        lblTitleView = new javax.swing.JLabel();
        lblFooterView = new javax.swing.JLabel();
        txtLocationView = new javax.swing.JTextField();
        MoreOptionsPanel = new javax.swing.JPanel();
        lblTitleView1 = new javax.swing.JLabel();
        lblFooterView1 = new javax.swing.JLabel();
        lblBrands = new javax.swing.JLabel();
        lblBrandDesc = new javax.swing.JLabel();
        btnBackView1 = new javax.swing.JButton();
        btnViewBrands = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        lblUpdatedFleets = new javax.swing.JLabel();
        lblUpdatedFleetsDesc = new javax.swing.JLabel();
        btnLastUpdates = new javax.swing.JButton();

        layeredPane.setLayout(new java.awt.CardLayout());

        lblHeader.setBackground(new java.awt.Color(0, 0, 0));
        lblHeader.setFont(new java.awt.Font("Perpetua", 0, 48)); // NOI18N
        lblHeader.setForeground(new java.awt.Color(255, 255, 255));
        lblHeader.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHeader.setText("<html><b>UBER</b> <em>Fleet</em><span  font color=\"rgb(255, 179, 0)\"><b>..</b></span></html>");
        lblHeader.setOpaque(true);

        lblTitle1.setFont(new java.awt.Font("Nirmala UI", 0, 18)); // NOI18N
        lblTitle1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle1.setText("Pick your location of interest");

        drpLocation.setFont(new java.awt.Font("Perpetua", 0, 18)); // NOI18N
        drpLocation.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Allston", "Back Bay", "Bay Village", "Beacon Hill", "Brighton", "Charlestown","Fenway-Kenmore" }));
        drpLocation.setAlignmentX(java.awt.Component.CENTER_ALIGNMENT);
        drpLocation.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        drpLocation.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        drpLocation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                drpLocationActionPerformed(evt);
            }
        });

        btnSubmit.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 18)); // NOI18N
        btnSubmit.setText("GO");
        btnSubmit.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        btnSubmit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });

        lblFooter.setBackground(new java.awt.Color(0, 0, 0));
        lblFooter.setForeground(new java.awt.Color(255, 255, 255));
        lblFooter.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblFooter.setText("<html>Logged in as <b>CUSTOMER<b></html>");
        lblFooter.setOpaque(true);

        javax.swing.GroupLayout CustomerLocationPanelLayout = new javax.swing.GroupLayout(CustomerLocationPanel);
        CustomerLocationPanel.setLayout(CustomerLocationPanelLayout);
        CustomerLocationPanelLayout.setHorizontalGroup(
            CustomerLocationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CustomerLocationPanelLayout.createSequentialGroup()
                .addGroup(CustomerLocationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblHeader, javax.swing.GroupLayout.DEFAULT_SIZE, 999, Short.MAX_VALUE)
                    .addComponent(lblFooter))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(CustomerLocationPanelLayout.createSequentialGroup()
                .addGap(215, 215, 215)
                .addGroup(CustomerLocationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(lblTitle1, javax.swing.GroupLayout.PREFERRED_SIZE, 545, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(drpLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 446, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(389, Short.MAX_VALUE))
        );
        CustomerLocationPanelLayout.setVerticalGroup(
            CustomerLocationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CustomerLocationPanelLayout.createSequentialGroup()
                .addComponent(lblHeader, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(121, 121, 121)
                .addComponent(lblTitle1, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(drpLocation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 177, Short.MAX_VALUE)
                .addComponent(btnSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addComponent(lblFooter, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47))
        );

        layeredPane.add(CustomerLocationPanel, "card2");

        CustomerDashboardPanel.setBackground(new java.awt.Color(255, 255, 255));

        lblTitle.setBackground(new java.awt.Color(0, 0, 0));
        lblTitle.setFont(new java.awt.Font("Perpetua", 1, 48)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(255, 255, 255));
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("<html>Your <em>Fleet</em><span  font color=\"rgb(255, 179, 0)\"><b>..</b></span></html>");
        lblTitle.setOpaque(true);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        tblFleet2.setBackground(new java.awt.Color(255, 255, 255));
        tblFleet2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        tblFleet2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Manufacturer", "Model", "Maufac. On", "Seats", "Serial No.", "Model No.", "Location", "Available"
            }
        ));
        jScrollPane7.setViewportView(tblFleet2);

        btnDetail3.setBackground(new java.awt.Color(179, 224, 255));
        btnDetail3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnDetail3.setForeground(new java.awt.Color(0, 107, 179));
        btnDetail3.setText("360 degree");
        btnDetail3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnDetail3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDetail1ActionPerformed(evt);
            }
        });

        toggleFilterOptions2.setBackground(new java.awt.Color(214, 245, 245));
        toggleFilterOptions2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        toggleFilterOptions2.setForeground(new java.awt.Color(20, 82, 82));
        toggleFilterOptions2.setText("Filter Results");
        toggleFilterOptions2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toggleFilterOptionsActionPerformed(evt);
            }
        });

        enableLocationFilter2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        enableLocationFilter2.setText("Location");
        enableLocationFilter2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enableLocationFilterActionPerformed(evt);
            }
        });

        enableManufacturerFilter2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        enableManufacturerFilter2.setText("Manufacturer");
        enableManufacturerFilter2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enableManufacturerFilterActionPerformed(evt);
            }
        });

        enableManufactureYearFilter2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        enableManufactureYearFilter2.setText("Year of Manufacture");
        enableManufactureYearFilter2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enableManufactureYearFilterActionPerformed(evt);
            }
        });

        enableSeatsFilter2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        enableSeatsFilter2.setText("No. of seats");
        enableSeatsFilter2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enableSeatsFilterActionPerformed(evt);
            }
        });

        enableSerialNoFilter2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        enableSerialNoFilter2.setText("Serial No.");
        enableSerialNoFilter2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enableSerialNoFilterActionPerformed(evt);
            }
        });

        enableModelNoFilter2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        enableModelNoFilter2.setText("Model No.");
        enableModelNoFilter2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enableModelNoFilterActionPerformed(evt);
            }
        });

        enableMaintCertFilter2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        enableMaintCertFilter2.setText("Maintenance Cert Expiry");
        enableMaintCertFilter2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enableMaintCertFilterActionPerformed(evt);
            }
        });

        enableAvailabilityFilter2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        enableAvailabilityFilter2.setText("Availability");
        enableAvailabilityFilter2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enableAvailabilityFilterActionPerformed(evt);
            }
        });

        btnClearFilter2.setBackground(new java.awt.Color(179, 224, 255));
        btnClearFilter2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnClearFilter2.setForeground(new java.awt.Color(20, 82, 82));
        btnClearFilter2.setText("CLEAR FILTER");
        btnClearFilter2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnClearFilter2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearFilterActionPerformed(evt);
            }
        });

        btnSubmitAdvanceSearch2.setBackground(new java.awt.Color(214, 245, 245));
        btnSubmitAdvanceSearch2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnSubmitAdvanceSearch2.setForeground(new java.awt.Color(20, 82, 82));
        btnSubmitAdvanceSearch2.setText("SUBMIT");
        btnSubmitAdvanceSearch2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSubmitAdvanceSearch2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitAdvanceSearchActionPerformed(evt);
            }
        });

        lblLocationFilter2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblLocationFilter2.setText("Location:");

        drpLocationFilter2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {"--ALL LOCATIONS--", "Allston", "Back Bay", "Bay Village", "Beacon Hill", "Brighton", "Charlestown","Fenway-Kenmore" }));
        drpLocationFilter2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                drpLocationFilterActionPerformed(evt);
            }
        });

        lblManufacturerFilter2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblManufacturerFilter2.setText("Manufacturer:");

        drpManufacturerFilter2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--ALL--", "Toyota", "Honda", "General Motors", "Chevrolet", "Ford", "Mazda", "Nissan" }));

        lblManufactureYearFilter2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblManufactureYearFilter2.setText("Year of manufacture:");

        drpManufacturerYearFilter2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--ALL--", "2000", "2001", "2002", "2003", "2004", "2005", "2006", "2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020", "2021" }));
        drpManufacturerYearFilter2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                drpManufacturerYearFilterActionPerformed(evt);
            }
        });

        lblMaintCertFilter2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblMaintCertFilter2.setText("Expired Maintenance Cert?");

        chkMaintCertFilterYes2.setText("Y");
        chkMaintCertFilterYes2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkMaintCertFilterYesActionPerformed(evt);
            }
        });

        chkMaintCertFilterNo2.setText("N");
        chkMaintCertFilterNo2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkMaintCertFilterNoActionPerformed(evt);
            }
        });

        lblSeatsFilter2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblSeatsFilter2.setText("Number of seats:");

        txtMinSeats2.setForeground(new java.awt.Color(153, 153, 153));
        txtMinSeats2.setText("Min.");
        txtMinSeats2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtMinSeatsFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtMinSeatsFocusLost(evt);
            }
        });
        txtMinSeats2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMinSeats2ActionPerformed(evt);
            }
        });

        txtMaxSeats2.setForeground(new java.awt.Color(153, 153, 153));
        txtMaxSeats2.setText("Max.");
        txtMaxSeats2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtMaxSeatsFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtMaxSeatsFocusLost(evt);
            }
        });

        lblSerialNoFilter2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblSerialNoFilter2.setText("Serial No:");

        lblModelNoFilter2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblModelNoFilter2.setText("Model No:");

        lblAvaiabilityFilter2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblAvaiabilityFilter2.setText("Availability:");

        chkAvailabilityYes2.setText("Y");
        chkAvailabilityYes2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkAvailabilityYesActionPerformed(evt);
            }
        });

        chkAvaiabilityNo2.setText("N");
        chkAvaiabilityNo2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkAvaiabilityNoActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(255, 255, 255));
        jButton3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton3.setForeground(new java.awt.Color(0, 153, 153));
        jButton3.setText("More Options");
        jButton3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        tglFindRide2.setBackground(new java.awt.Color(255, 255, 179));
        tglFindRide2.setText("<html><b>Find me a RIDE</b><span  font color=\"rgb(255, 179, 0)\"><b>..</b></span></html> ");
        tglFindRide2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tglFindRideActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(enableModelNoFilter2)
                            .addComponent(enableLocationFilter2)
                            .addComponent(enableManufacturerFilter2)
                            .addComponent(enableManufactureYearFilter2)
                            .addComponent(enableSeatsFilter2)
                            .addComponent(enableSerialNoFilter2)
                            .addComponent(enableMaintCertFilter2)
                            .addComponent(enableAvailabilityFilter2))
                        .addGap(0, 1138, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(toggleFilterOptions2, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(43, 43, 43)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(247, 247, 247)
                                        .addComponent(btnClearFilter2)
                                        .addGap(29, 29, 29)
                                        .addComponent(btnSubmitAdvanceSearch2, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(29, 29, 29)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(lblLocationFilter2)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(drpLocationFilter2, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(lblManufacturerFilter2)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(drpManufacturerFilter2, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(lblManufactureYearFilter2)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(drpManufacturerYearFilter2, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(43, 43, 43)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(lblSeatsFilter2)
                                                .addGap(18, 18, 18)
                                                .addComponent(txtMinSeats2, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(txtMaxSeats2, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(lblSerialNoFilter2)
                                                    .addComponent(lblModelNoFilter2))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(txtModelNoFilter2, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(txtSerialNoFilter2, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(lblMaintCertFilter2)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(chkMaintCertFilterYes2)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(chkMaintCertFilterNo2)
                                                .addGap(191, 191, 191))
                                            .addComponent(lblAvaiabilityFilter2, javax.swing.GroupLayout.Alignment.TRAILING))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(chkAvailabilityYes2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(chkAvaiabilityNo2))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnDetail3)
                                .addGap(18, 18, 18)
                                .addComponent(tglFindRide2, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton3))
                            .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 907, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDetail3)
                    .addComponent(jButton3)
                    .addComponent(tglFindRide2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(toggleFilterOptions2)
                        .addGap(18, 18, 18)
                        .addComponent(enableLocationFilter2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(enableManufacturerFilter2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(enableManufactureYearFilter2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(enableSeatsFilter2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(enableSerialNoFilter2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(enableModelNoFilter2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(enableMaintCertFilter2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(enableAvailabilityFilter2))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnSubmitAdvanceSearch2)
                            .addComponent(btnClearFilter2))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblLocationFilter2)
                                    .addComponent(drpLocationFilter2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblManufacturerFilter2)
                                    .addComponent(drpManufacturerFilter2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblManufactureYearFilter2)
                                    .addComponent(drpManufacturerYearFilter2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblSeatsFilter2)
                                    .addComponent(txtMinSeats2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtMaxSeats2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(12, 12, 12)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblSerialNoFilter2)
                                    .addComponent(txtSerialNoFilter2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(12, 12, 12)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblModelNoFilter2)
                                    .addComponent(txtModelNoFilter2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblMaintCertFilter2)
                            .addComponent(chkMaintCertFilterYes2)
                            .addComponent(chkMaintCertFilterNo2)
                            .addComponent(lblAvaiabilityFilter2)
                            .addComponent(chkAvailabilityYes2)
                            .addComponent(chkAvaiabilityNo2))))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        jScrollPane8.setViewportView(jPanel1);

        lblFooter5.setBackground(new java.awt.Color(0, 0, 0));
        lblFooter5.setForeground(new java.awt.Color(255, 255, 255));
        lblFooter5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblFooter5.setText("<html>Logged in as <b>CUSTOMER<b></html>");
        lblFooter5.setOpaque(true);

        javax.swing.GroupLayout CustomerDashboardPanelLayout = new javax.swing.GroupLayout(CustomerDashboardPanel);
        CustomerDashboardPanel.setLayout(CustomerDashboardPanelLayout);
        CustomerDashboardPanelLayout.setHorizontalGroup(
            CustomerDashboardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblTitle)
            .addComponent(jScrollPane8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1149, Short.MAX_VALUE)
            .addComponent(lblFooter5, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        CustomerDashboardPanelLayout.setVerticalGroup(
            CustomerDashboardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CustomerDashboardPanelLayout.createSequentialGroup()
                .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 510, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblFooter5, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        layeredPane.add(CustomerDashboardPanel, "card3");

        CustomerViewPanel.setBackground(new java.awt.Color(255, 255, 255));

        lblManufacturerView.setText("MANUFACTURER:");

        lblModelView.setText("MODEL:");

        lblSeatsView.setText("SEATS:");

        lblSerialNoView.setText("SERIAL NUMBER:");

        lblModelNoView.setText("MODEL NUMBER:");

        lblLocationView.setText("LOCATION:");

        lblMaintCertView.setText("MAINTENANCE CERTIFICATE:");

        txtManufacturerView.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        txtModelView.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        txtSeatsView.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        txtSerialNoView.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txtSerialNoView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSerialNoViewActionPerformed(evt);
            }
        });

        txtModelNoView.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        txtMaincertView.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        lblManufactureYearVIew.setText("MANUFACTURE YEAR:");

        txtManufactureYearView.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        btnBackView.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnBackView.setText("BACK");
        btnBackView.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBackView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackViewActionPerformed(evt);
            }
        });

        lblTitleView.setBackground(new java.awt.Color(0, 0, 0));
        lblTitleView.setFont(new java.awt.Font("Perpetua", 0, 48)); // NOI18N
        lblTitleView.setForeground(new java.awt.Color(255, 255, 255));
        lblTitleView.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitleView.setText("<html><b><span  font color=\"rgb(255, 179, 0)\">360</span> degree</b> view</html>");
        lblTitleView.setToolTipText("");
        lblTitleView.setOpaque(true);

        lblFooterView.setBackground(new java.awt.Color(0, 0, 0));
        lblFooterView.setOpaque(true);

        txtLocationView.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        javax.swing.GroupLayout CustomerViewPanelLayout = new javax.swing.GroupLayout(CustomerViewPanel);
        CustomerViewPanel.setLayout(CustomerViewPanelLayout);
        CustomerViewPanelLayout.setHorizontalGroup(
            CustomerViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CustomerViewPanelLayout.createSequentialGroup()
                .addGroup(CustomerViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTitleView)
                    .addComponent(lblFooterView, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(CustomerViewPanelLayout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(btnBackView)
                        .addGap(134, 134, 134)
                        .addGroup(CustomerViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(lblManufactureYearVIew)
                            .addComponent(lblSerialNoView)
                            .addComponent(lblModelView)
                            .addComponent(lblModelNoView)
                            .addComponent(lblLocationView)
                            .addComponent(lblMaintCertView)
                            .addComponent(lblSeatsView)
                            .addComponent(lblManufacturerView))
                        .addGap(30, 30, 30)
                        .addGroup(CustomerViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtManufacturerView, javax.swing.GroupLayout.DEFAULT_SIZE, 139, Short.MAX_VALUE)
                            .addComponent(txtModelView)
                            .addComponent(txtSeatsView)
                            .addComponent(txtSerialNoView)
                            .addComponent(txtModelNoView)
                            .addComponent(txtMaincertView)
                            .addComponent(txtManufactureYearView)
                            .addComponent(txtLocationView))
                        .addGap(0, 570, Short.MAX_VALUE)))
                .addContainerGap())
        );
        CustomerViewPanelLayout.setVerticalGroup(
            CustomerViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CustomerViewPanelLayout.createSequentialGroup()
                .addComponent(lblTitleView, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(CustomerViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(CustomerViewPanelLayout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(btnBackView))
                    .addGroup(CustomerViewPanelLayout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addGroup(CustomerViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblManufacturerView)
                            .addComponent(txtManufacturerView, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(CustomerViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblModelView)
                            .addComponent(txtModelView, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(CustomerViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblManufactureYearVIew)
                            .addComponent(txtManufactureYearView, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(CustomerViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblSeatsView)
                            .addComponent(txtSeatsView, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(CustomerViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblSerialNoView)
                            .addComponent(txtSerialNoView, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(CustomerViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblModelNoView)
                            .addComponent(txtModelNoView, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(CustomerViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblLocationView)
                            .addComponent(txtLocationView, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(CustomerViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblMaintCertView)
                            .addComponent(txtMaincertView, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 172, Short.MAX_VALUE)
                .addComponent(lblFooterView, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        layeredPane.add(CustomerViewPanel, "card4");

        MoreOptionsPanel.setBackground(new java.awt.Color(255, 255, 255));

        lblTitleView1.setBackground(new java.awt.Color(0, 0, 0));
        lblTitleView1.setFont(new java.awt.Font("Perpetua", 0, 48)); // NOI18N
        lblTitleView1.setForeground(new java.awt.Color(255, 255, 255));
        lblTitleView1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitleView1.setText("More Options");
        lblTitleView1.setToolTipText("");
        lblTitleView1.setOpaque(true);

        lblFooterView1.setBackground(new java.awt.Color(0, 0, 0));
        lblFooterView1.setOpaque(true);

        lblBrands.setFont(new java.awt.Font("Segoe UI", 0, 48)); // NOI18N
        lblBrands.setText("<html><b>BRAND<span  font color=\"rgb(255, 179, 0)\">s</span></b></html>");

        lblBrandDesc.setFont(new java.awt.Font("Gill Sans MT", 0, 12)); // NOI18N
        lblBrandDesc.setText("<html>We at <b>UBER <em>fleet</em><span  font color=\"rgb(255, 179, 0)\">..</span></b> are committed to our customers' needs.<br>We have partnered with the top brands in the world to provide the best Infotainment experience to our customers on their journey.<br>Checkout our brand partnerships below!</html>");

        btnBackView1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnBackView1.setText("BACK");
        btnBackView1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBackView1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackView1ActionPerformed(evt);
            }
        });

        btnViewBrands.setBackground(new java.awt.Color(255, 255, 255));
        btnViewBrands.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnViewBrands.setForeground(new java.awt.Color(255, 179, 0));
        btnViewBrands.setText("View brands");
        btnViewBrands.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnViewBrands.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewBrandsActionPerformed(evt);
            }
        });

        jTable1.setBackground(new java.awt.Color(255, 255, 255));
        jTable1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "RESULTS"
            }
        ));
        jScrollPane3.setViewportView(jTable1);

        lblUpdatedFleets.setFont(new java.awt.Font("Segoe UI", 0, 48)); // NOI18N
        lblUpdatedFleets.setText("<html><b>Regular <em>Updates</em><span  font color=\"rgb(255, 179, 0)\">..</span></b></html>");

        lblUpdatedFleetsDesc.setFont(new java.awt.Font("Gill Sans MT", 0, 12)); // NOI18N
        lblUpdatedFleetsDesc.setText("<html>We at <b>UBER <em>fleet</em><span  font color=\"rgb(255, 179, 0)\">..</span></b> constantly update our rides<br>so that you can reach your destination as fast and as comfortably as possible.<br>Don't believe us? Check for yourself below  :)</html> ");

        btnLastUpdates.setBackground(new java.awt.Color(255, 255, 255));
        btnLastUpdates.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnLastUpdates.setForeground(new java.awt.Color(255, 179, 0));
        btnLastUpdates.setText("Last updates");
        btnLastUpdates.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLastUpdatesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout MoreOptionsPanelLayout = new javax.swing.GroupLayout(MoreOptionsPanel);
        MoreOptionsPanel.setLayout(MoreOptionsPanelLayout);
        MoreOptionsPanelLayout.setHorizontalGroup(
            MoreOptionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MoreOptionsPanelLayout.createSequentialGroup()
                .addGroup(MoreOptionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(MoreOptionsPanelLayout.createSequentialGroup()
                        .addGap(115, 115, 115)
                        .addComponent(lblBrands, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(MoreOptionsPanelLayout.createSequentialGroup()
                        .addGap(135, 135, 135)
                        .addGroup(MoreOptionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnViewBrands, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblBrandDesc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(MoreOptionsPanelLayout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addGroup(MoreOptionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnBackView1)
                            .addGroup(MoreOptionsPanelLayout.createSequentialGroup()
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(92, 92, 92)
                                .addGroup(MoreOptionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(MoreOptionsPanelLayout.createSequentialGroup()
                                        .addGap(13, 13, 13)
                                        .addGroup(MoreOptionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblUpdatedFleetsDesc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(btnLastUpdates, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(lblUpdatedFleets, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MoreOptionsPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblFooterView1, javax.swing.GroupLayout.PREFERRED_SIZE, 1143, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MoreOptionsPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(lblTitleView1, javax.swing.GroupLayout.PREFERRED_SIZE, 963, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(180, 180, 180))
        );
        MoreOptionsPanelLayout.setVerticalGroup(
            MoreOptionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MoreOptionsPanelLayout.createSequentialGroup()
                .addComponent(lblTitleView1, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(btnBackView1)
                .addGap(17, 17, 17)
                .addComponent(lblBrands, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblBrandDesc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnViewBrands)
                .addGroup(MoreOptionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(MoreOptionsPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 109, Short.MAX_VALUE)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)
                        .addComponent(lblFooterView1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(MoreOptionsPanelLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(MoreOptionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(MoreOptionsPanelLayout.createSequentialGroup()
                                .addComponent(lblUpdatedFleets, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(137, 137, 137))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MoreOptionsPanelLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblUpdatedFleetsDesc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnLastUpdates)))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        layeredPane.add(MoreOptionsPanel, "card5");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(layeredPane)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(layeredPane)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void drpLocationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_drpLocationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_drpLocationActionPerformed

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        // TODO add your handling code here:

        flag.setLocation(drpLocation.getSelectedItem().toString());
        layeredPane.removeAll();
        layeredPane.add(CustomerDashboardPanel);
        layeredPane.revalidate();
        layeredPane.repaint();
        populateTable(flag.getLocation(), flag.getManufacturerFilter(), flag.getManufactureYearFilter(), flag.getMinSeatsFilter(), flag.getMaxSeatsFilter(), flag.getSerialNoFilter(), flag.getModelNoFilter(), false, flag.getExpiredMaintCert(), flag.getAvailability(), flag.getFindFirstCar());
    }//GEN-LAST:event_btnSubmitActionPerformed

    private void txtSerialNoViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSerialNoViewActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSerialNoViewActionPerformed

    private void btnBackViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackViewActionPerformed
        // TODO add your handling code here:
        layeredPane.removeAll();
        layeredPane.add(CustomerDashboardPanel);
        layeredPane.validate();
        layeredPane.repaint();
    }//GEN-LAST:event_btnBackViewActionPerformed

    private void btnLastUpdatesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLastUpdatesActionPerformed
        // TODO add your handling code here:
        populateResultsDate();
    }//GEN-LAST:event_btnLastUpdatesActionPerformed

    private void btnViewBrandsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewBrandsActionPerformed
        // TODO add your handling code here:
        populateResults();
    }//GEN-LAST:event_btnViewBrandsActionPerformed

    private void btnBackView1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackView1ActionPerformed
        // TODO add your handling code here:
        layeredPane.removeAll();
        layeredPane.add(CustomerDashboardPanel);
        layeredPane.revalidate();
        layeredPane.repaint();
    }//GEN-LAST:event_btnBackView1ActionPerformed

    private void tglFindRideActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tglFindRideActionPerformed
        // TODO add your handling code here:
        if (fleet.getFleet() == null || fleet.getFleet().isEmpty()) {
            JOptionPane.showMessageDialog(this, "There are no cars in the fleet!");
        } else {
            populateTable(flag.getLocation(), flag.getManufacturerFilter(), flag.getManufactureYearFilter(), flag.getMinSeatsFilter(), flag.getMaxSeatsFilter(), flag.getSerialNoFilter(), flag.getModelNoFilter(), false, flag.getExpiredMaintCert(), flag.getAvailability(), flag.getFindFirstCar());
        }
    }//GEN-LAST:event_tglFindRideActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if (fleet.getFleet() == null || fleet.getFleet().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Hang On! Add a car to your fleet first!");
        } else {
            layeredPane.removeAll();
            layeredPane.add(MoreOptionsPanel);
            layeredPane.revalidate();
            layeredPane.repaint();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void chkAvaiabilityNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkAvaiabilityNoActionPerformed
        // TODO add your handling code here:
        chkAvailabilityYes2.setSelected(false);
    }//GEN-LAST:event_chkAvaiabilityNoActionPerformed

    private void chkAvailabilityYesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkAvailabilityYesActionPerformed
        // TODO add your handling code here:
        chkAvaiabilityNo2.setSelected(false);
    }//GEN-LAST:event_chkAvailabilityYesActionPerformed

    private void txtMaxSeatsFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMaxSeatsFocusLost
        // TODO add your handling code here:
        if (txtMaxSeats2.getText().equals("")) {
            txtMaxSeats2.setText("Max.");
            txtMaxSeats2.setForeground(new Color(153, 153, 153));
        }
    }//GEN-LAST:event_txtMaxSeatsFocusLost

    private void txtMaxSeatsFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMaxSeatsFocusGained
        // TODO add your handling code here:
        if (txtMaxSeats2.getText().equals("Max.")) {
            txtMaxSeats2.setText("");
            txtMaxSeats2.setForeground(new Color(0, 0, 0));
        }
    }//GEN-LAST:event_txtMaxSeatsFocusGained

    private void txtMinSeatsFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMinSeatsFocusLost
        // TODO add your handling code here:
        if (txtMinSeats2.getText().equals("")) {
            txtMinSeats2.setText("Min.");
            txtMinSeats2.setForeground(new Color(153, 153, 153));
        }
    }//GEN-LAST:event_txtMinSeatsFocusLost

    private void txtMinSeatsFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMinSeatsFocusGained
        // TODO add your handling code here:
        if (txtMinSeats2.getText().equals("Min.")) {
            txtMinSeats2.setText("");
            txtMinSeats2.setForeground(new Color(0, 0, 0));
        }
    }//GEN-LAST:event_txtMinSeatsFocusGained

    private void chkMaintCertFilterNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkMaintCertFilterNoActionPerformed
        // TODO add your handling code here:
        chkMaintCertFilterYes2.setSelected(false);
    }//GEN-LAST:event_chkMaintCertFilterNoActionPerformed

    private void chkMaintCertFilterYesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkMaintCertFilterYesActionPerformed
        // TODO add your handling code here:
        chkMaintCertFilterNo2.setSelected(false);
    }//GEN-LAST:event_chkMaintCertFilterYesActionPerformed

    private void drpManufacturerYearFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_drpManufacturerYearFilterActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_drpManufacturerYearFilterActionPerformed

    private void drpLocationFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_drpLocationFilterActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_drpLocationFilterActionPerformed

    private void btnSubmitAdvanceSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitAdvanceSearchActionPerformed
        // TODO add your handling code here:
        if (enableLocationFilter2.isSelected()) {
            flag.setLocationFilter(drpLocationFilter2.getSelectedItem().toString());
        }

        if (enableManufacturerFilter2.isSelected()) {
            flag.setManufacturerFilter(drpManufacturerFilter2.getSelectedItem().toString());
        }

        if (enableManufactureYearFilter2.isSelected()) {
            flag.setManufactureYearFilter(drpManufacturerYearFilter2.getSelectedItem().toString());
        }

        if (enableSeatsFilter2.isSelected()) {
            if (!txtMinSeats2.getText().isBlank() && !txtMinSeats2.getText().isEmpty() && !txtMaxSeats2.getText().isBlank() && !txtMaxSeats2.getText().isEmpty()) {
                flag.setMinSeatsFilter(Integer.parseInt(txtMinSeats2.getText()));
                flag.setMaxSeatsFilter(Integer.parseInt(txtMaxSeats2.getText()));
            } else {
                flag.setMinSeatsFilter(0);
                flag.setMaxSeatsFilter(1000);
            }
        }

        if (enableSerialNoFilter2.isSelected()) {
            flag.setSerialNoFilter(txtSerialNoFilter2.getText());
        }

        if (enableModelNoFilter2.isSelected()) {
            flag.setModelNoFilter(txtModelNoFilter2.getText());
        }

        if (enableMaintCertFilter2.isSelected()) {
            if (chkMaintCertFilterYes2.isSelected()) {
                flag.setExpiredMaintCert("Expired");
                chkMaintCertFilterNo2.setSelected(false);
            } else if (chkMaintCertFilterNo2.isSelected()) {
                flag.setExpiredMaintCert("Valid");
                chkMaintCertFilterYes2.setSelected(false);
            } else {
                flag.setExpiredMaintCert(null);
            }
        }

        if (enableAvailabilityFilter2.isSelected()) {
            if (chkAvailabilityYes2.isSelected()) {
                flag.setAvailability("YES");
            } else if (chkAvaiabilityNo2.isSelected()) {
                flag.setAvailability("NO");
            } else {
                flag.setAvailability(null);
            }
        }
        populateTable(flag.getLocationFilter(), flag.getManufacturerFilter(), flag.getManufactureYearFilter(), flag.getMinSeatsFilter(), flag.getMaxSeatsFilter(), flag.getSerialNoFilter(), flag.getModelNoFilter(), true, flag.getExpiredMaintCert(), flag.getAvailability(), flag.getFindFirstCar());
    }//GEN-LAST:event_btnSubmitAdvanceSearchActionPerformed

    private void btnClearFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearFilterActionPerformed
        // TODO add your handling code here:
        drpLocationFilter2.setSelectedItem("--ALL LOCATIONS--");
        drpManufacturerFilter2.setSelectedItem("--ALL--");
        drpManufacturerYearFilter2.setSelectedItem("--ALL--");
        txtMaxSeats2.setText("");
//        txtMaxSeats2.setForeground(new Color(255, 255, 255));
        txtMinSeats2.setText("");
//        txtMinSeats2.setForeground(new Color(255, 255, 255));
        txtSerialNoFilter2.setText("");
        txtModelNoFilter2.setText("");
        chkMaintCertFilterYes2.setSelected(false);
        chkMaintCertFilterNo2.setSelected(false);
        chkAvailabilityYes2.setSelected(false);
        chkAvaiabilityNo2.setSelected(false);
    }//GEN-LAST:event_btnClearFilterActionPerformed

    private void enableAvailabilityFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enableAvailabilityFilterActionPerformed
        // TODO add your handling code here:
        if (isAnyRadioEnabled()) {
            btnSubmitAdvanceSearch2.setVisible(true);
            btnClearFilter2.setVisible(true);
        } else {
            btnSubmitAdvanceSearch2.setVisible(false);
            btnClearFilter2.setVisible(false);
        }
        if (enableAvailabilityFilter2.isSelected()) {
            lblAvaiabilityFilter2.setVisible(true);
            chkAvailabilityYes2.setVisible(true);
            chkAvaiabilityNo2.setVisible(true);
        } else {
            lblAvaiabilityFilter2.setVisible(false);
            chkAvailabilityYes2.setVisible(false);
            chkAvaiabilityNo2.setVisible(false);
        }
    }//GEN-LAST:event_enableAvailabilityFilterActionPerformed

    private void enableMaintCertFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enableMaintCertFilterActionPerformed
        // TODO add your handling code here:
        if (isAnyRadioEnabled()) {
            btnSubmitAdvanceSearch2.setVisible(true);
            btnClearFilter2.setVisible(true);
        } else {
            btnSubmitAdvanceSearch2.setVisible(false);
            btnClearFilter2.setVisible(false);
        }

        if (enableMaintCertFilter2.isSelected()) {
            lblMaintCertFilter2.setVisible(true);
            chkMaintCertFilterYes2.setVisible(true);
            chkMaintCertFilterNo2.setVisible(true);
        } else {
            lblMaintCertFilter2.setVisible(false);
            chkMaintCertFilterYes2.setVisible(false);
            chkMaintCertFilterNo2.setVisible(false);
        }
    }//GEN-LAST:event_enableMaintCertFilterActionPerformed

    private void enableModelNoFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enableModelNoFilterActionPerformed
        // TODO add your handling code here:
        if (isAnyRadioEnabled()) {
            btnSubmitAdvanceSearch2.setVisible(true);
            btnClearFilter2.setVisible(true);
        } else {
            btnSubmitAdvanceSearch2.setVisible(false);
            btnClearFilter2.setVisible(false);
        }

        if (enableModelNoFilter2.isSelected()) {
            lblModelNoFilter2.setVisible(true);
            txtModelNoFilter2.setVisible(true);
        } else {
            lblModelNoFilter2.setVisible(false);
            txtModelNoFilter2.setVisible(false);
        }
    }//GEN-LAST:event_enableModelNoFilterActionPerformed

    private void enableSerialNoFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enableSerialNoFilterActionPerformed
        // TODO add your handling code here:
        if (isAnyRadioEnabled()) {
            btnSubmitAdvanceSearch2.setVisible(true);
            btnClearFilter2.setVisible(true);
        } else {
            btnSubmitAdvanceSearch2.setVisible(false);
            btnClearFilter2.setVisible(false);
        }

        if (enableSerialNoFilter2.isSelected()) {
            lblSerialNoFilter2.setVisible(true);
            txtSerialNoFilter2.setVisible(true);
        } else {
            lblSerialNoFilter2.setVisible(false);
            txtSerialNoFilter2.setVisible(false);
        }
    }//GEN-LAST:event_enableSerialNoFilterActionPerformed

    private void enableSeatsFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enableSeatsFilterActionPerformed
        // TODO add your handling code here:
        if (isAnyRadioEnabled()) {
            btnSubmitAdvanceSearch2.setVisible(true);
            btnClearFilter2.setVisible(true);
        } else {
            btnSubmitAdvanceSearch2.setVisible(false);
            btnClearFilter2.setVisible(false);
        }

        if (enableSeatsFilter2.isSelected()) {
            lblSeatsFilter2.setVisible(true);
            txtMinSeats2.setVisible(true);
            txtMaxSeats2.setVisible(true);
        } else {
            lblSeatsFilter2.setVisible(false);
            txtMinSeats2.setVisible(false);
            txtMaxSeats2.setVisible(false);
        }
    }//GEN-LAST:event_enableSeatsFilterActionPerformed

    private void enableManufactureYearFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enableManufactureYearFilterActionPerformed
        // TODO add your handling code here:
        if (isAnyRadioEnabled()) {
            btnSubmitAdvanceSearch2.setVisible(true);
            btnClearFilter2.setVisible(true);
        } else {
            btnSubmitAdvanceSearch2.setVisible(false);
            btnClearFilter2.setVisible(false);
        }

        if (enableManufactureYearFilter2.isSelected()) {
            lblManufactureYearFilter2.setVisible(true);
            drpManufacturerYearFilter2.setVisible(true);
        } else {
            lblManufactureYearFilter2.setVisible(false);
            drpManufacturerYearFilter2.setVisible(false);
        }
    }//GEN-LAST:event_enableManufactureYearFilterActionPerformed

    private void enableManufacturerFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enableManufacturerFilterActionPerformed
        // TODO add your handling code here:

        if (isAnyRadioEnabled()) {
            btnSubmitAdvanceSearch2.setVisible(true);
            btnClearFilter2.setVisible(true);
        } else {
            btnSubmitAdvanceSearch2.setVisible(false);
            btnClearFilter2.setVisible(false);
        }

        if (enableManufacturerFilter2.isSelected()) {
            lblManufacturerFilter2.setVisible(true);
            drpManufacturerFilter2.setVisible(true);
        } else {
            lblManufacturerFilter2.setVisible(false);
            drpManufacturerFilter2.setVisible(false);
        }
    }//GEN-LAST:event_enableManufacturerFilterActionPerformed

    private void enableLocationFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enableLocationFilterActionPerformed
        // TODO add your handling code here:
        if (isAnyRadioEnabled()) {
            btnSubmitAdvanceSearch2.setVisible(true);
            btnClearFilter2.setVisible(true);
        } else {
            btnSubmitAdvanceSearch2.setVisible(false);
            btnClearFilter2.setVisible(false);
        }
        if (enableLocationFilter2.isSelected()) {
            lblLocationFilter2.setVisible(true);
            drpLocationFilter2.setVisible(true);

        } else {
            lblLocationFilter2.setVisible(false);
            drpLocationFilter2.setVisible(false);
        }
    }//GEN-LAST:event_enableLocationFilterActionPerformed

    private void toggleFilterOptionsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toggleFilterOptionsActionPerformed
        // TODO add your handling code here:
        if (toggleFilterOptions2.isSelected()) {
            enableDisableVisibility(true);
        } else {
            enableDisableVisibility(false);
        }
    }//GEN-LAST:event_toggleFilterOptionsActionPerformed

    private void btnDetail1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDetail1ActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblFleet2.getSelectedRow();

        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Not so fast, select a row first!");
            return;
        }

        layeredPane.removeAll();
        layeredPane.add(CustomerViewPanel);
        layeredPane.validate();
        layeredPane.repaint();
        DefaultTableModel model = (DefaultTableModel) tblFleet2.getModel();
        Cars cars = (Cars) model.getValueAt(selectedRowIndex, 0);
        txtManufacturerView.setText(cars.getManufacturer());
        txtModelView.setText(cars.getModel());
        txtManufactureYearView.setText(cars.getManufactureYear());
        txtSeatsView.setText(String.valueOf(cars.getNumOfSeats()));
        txtSerialNoView.setText(cars.getSerialNum());
        txtModelNoView.setText(cars.getModelNum());
        txtLocationView.setText(cars.getLocation());
        txtMaincertView.setText(cars.getMaintCertExpiry());
    }//GEN-LAST:event_btnDetail1ActionPerformed

    private void txtMinSeats2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMinSeats2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMinSeats2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel CustomerDashboardPanel;
    private javax.swing.JPanel CustomerLocationPanel;
    private javax.swing.JPanel CustomerViewPanel;
    private javax.swing.JPanel MoreOptionsPanel;
    private javax.swing.JButton btnBackView;
    private javax.swing.JButton btnBackView1;
    private javax.swing.JButton btnClearFilter2;
    private javax.swing.JButton btnDetail3;
    private javax.swing.JButton btnLastUpdates;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JButton btnSubmitAdvanceSearch2;
    private javax.swing.JButton btnViewBrands;
    private javax.swing.JCheckBox chkAvaiabilityNo2;
    private javax.swing.JCheckBox chkAvailabilityYes2;
    private javax.swing.JCheckBox chkMaintCertFilterNo2;
    private javax.swing.JCheckBox chkMaintCertFilterYes2;
    private javax.swing.JComboBox<String> drpLocation;
    private javax.swing.JComboBox<String> drpLocationFilter2;
    private javax.swing.JComboBox<String> drpManufacturerFilter2;
    private javax.swing.JComboBox<String> drpManufacturerYearFilter2;
    private javax.swing.JRadioButton enableAvailabilityFilter2;
    private javax.swing.JRadioButton enableLocationFilter2;
    private javax.swing.JRadioButton enableMaintCertFilter2;
    private javax.swing.JRadioButton enableManufactureYearFilter2;
    private javax.swing.JRadioButton enableManufacturerFilter2;
    private javax.swing.JRadioButton enableModelNoFilter2;
    private javax.swing.JRadioButton enableSeatsFilter2;
    private javax.swing.JRadioButton enableSerialNoFilter2;
    private javax.swing.JButton jButton3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JTable jTable1;
    private javax.swing.JLayeredPane layeredPane;
    private javax.swing.JLabel lblAvaiabilityFilter2;
    private javax.swing.JLabel lblBrandDesc;
    private javax.swing.JLabel lblBrands;
    private javax.swing.JLabel lblFooter;
    private javax.swing.JLabel lblFooter5;
    private javax.swing.JLabel lblFooterView;
    private javax.swing.JLabel lblFooterView1;
    private javax.swing.JLabel lblHeader;
    private javax.swing.JLabel lblLocationFilter2;
    private javax.swing.JLabel lblLocationView;
    private javax.swing.JLabel lblMaintCertFilter2;
    private javax.swing.JLabel lblMaintCertView;
    private javax.swing.JLabel lblManufactureYearFilter2;
    private javax.swing.JLabel lblManufactureYearVIew;
    private javax.swing.JLabel lblManufacturerFilter2;
    private javax.swing.JLabel lblManufacturerView;
    private javax.swing.JLabel lblModelNoFilter2;
    private javax.swing.JLabel lblModelNoView;
    private javax.swing.JLabel lblModelView;
    private javax.swing.JLabel lblSeatsFilter2;
    private javax.swing.JLabel lblSeatsView;
    private javax.swing.JLabel lblSerialNoFilter2;
    private javax.swing.JLabel lblSerialNoView;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblTitle1;
    private javax.swing.JLabel lblTitleView;
    private javax.swing.JLabel lblTitleView1;
    private javax.swing.JLabel lblUpdatedFleets;
    private javax.swing.JLabel lblUpdatedFleetsDesc;
    private javax.swing.JTable tblFleet2;
    private javax.swing.JToggleButton tglFindRide2;
    private javax.swing.JToggleButton toggleFilterOptions2;
    private javax.swing.JTextField txtLocationView;
    private javax.swing.JTextField txtMaincertView;
    private javax.swing.JTextField txtManufactureYearView;
    private javax.swing.JTextField txtManufacturerView;
    private javax.swing.JTextField txtMaxSeats2;
    private javax.swing.JTextField txtMinSeats2;
    private javax.swing.JTextField txtModelNoFilter2;
    private javax.swing.JTextField txtModelNoView;
    private javax.swing.JTextField txtModelView;
    private javax.swing.JTextField txtSeatsView;
    private javax.swing.JTextField txtSerialNoFilter2;
    private javax.swing.JTextField txtSerialNoView;
    // End of variables declaration//GEN-END:variables

    private void populateTable(String locationFilter, String manufacturer, String manufactureYear, int minSeats, int maxSeats, String serialNo, String modelNo, boolean filterEnabled, String maintCert, String availability, String findFirstCar) {
        DefaultTableModel model = (DefaultTableModel) tblFleet2.getModel();
        model.setRowCount(0);
        int selectedRowIndex = tblFleet2.getSelectedRow();

        if (filterEnabled && !tglFindRide2.isSelected()) {
            ArrayList<Cars> filteredList = filteredList(locationFilter, manufacturer, manufactureYear, minSeats, maxSeats, serialNo, modelNo, maintCert, availability);
            for (Cars cars : filteredList) {
                Object[] row = new Object[8];
                row[0] = cars;
                row[1] = cars.getModel();
                row[2] = cars.getManufactureYear();
                row[3] = cars.getNumOfSeats();
                row[4] = cars.getSerialNum();
                row[5] = cars.getModelNum();
                row[6] = cars.getLocation();
                row[7] = cars.getAvailability();
                model.addRow(row);
            }
        } else if (tglFindRide2.isSelected()) {
            for (Cars cars : fleet.getFleet()) {
                if (flag.getLocationFilter() != null) {
                    if (cars.getLocation().equals(flag.getLocationFilter()) && !cars.getAvailability().equals("NO")) {
                        Object[] row = new Object[8];
                        row[0] = cars;
                        row[1] = cars.getModel();
                        row[2] = cars.getManufactureYear();
                        row[3] = cars.getNumOfSeats();
                        row[4] = cars.getSerialNum();
                        row[5] = cars.getModelNum();
                        row[6] = cars.getLocation();
                        row[7] = cars.getAvailability();
                        model.addRow(row);
                        break;
                    }
                } else {
                    if (cars.getLocation().equals(flag.getLocation()) && !cars.getAvailability().equals("NO")) {
                        Object[] row = new Object[8];
                        row[0] = cars;
                        row[1] = cars.getModel();
                        row[2] = cars.getManufactureYear();
                        row[3] = cars.getNumOfSeats();
                        row[4] = cars.getSerialNum();
                        row[5] = cars.getModelNum();
                        row[6] = cars.getLocation();
                        row[7] = cars.getAvailability();
                        model.addRow(row);
                        break;
                    }
                }
            }
        } else {
            for (Cars cars : fleet.getFleet()) {
                Object[] row = new Object[8];
                row[0] = cars;
                row[1] = cars.getModel();
                row[2] = cars.getManufactureYear();
                row[3] = cars.getNumOfSeats();
                row[4] = cars.getSerialNum();
                row[5] = cars.getModelNum();
                row[6] = cars.getLocation();
                row[7] = cars.getAvailability();
                model.addRow(row);
            }
        }
    }

    private void populateResults() {
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);
        List<String> manufacturers = new ArrayList<>();
        for (Cars cars : fleet.getFleet()) {
            manufacturers.add(cars.getManufacturer());
        }
        List<String> dedupeList = manufacturers.stream().distinct().collect(Collectors.toList());
        for (String cars : dedupeList) {
            Object[] row = new Object[1];
            row[0] = cars;
            model.addRow(row);
        }
    }

    private void populateResultsDate() {
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);
        Object[] row = new Object[1];
        row[0] = fleet.getUpdatedDateTime();
        model.addRow(row);
    }

    public void enableDisableVisibility(boolean visibility) {
        enableLocationFilter2.setVisible(visibility);
        enableManufacturerFilter2.setVisible(visibility);
        enableManufactureYearFilter2.setVisible(visibility);
        enableSeatsFilter2.setVisible(visibility);
        enableSerialNoFilter2.setVisible(visibility);
        enableModelNoFilter2.setVisible(visibility);
        enableMaintCertFilter2.setVisible(visibility);
        enableAvailabilityFilter2.setVisible(visibility);

        if (!visibility) {
            enableLocationFilter2.setSelected(false);
            enableManufacturerFilter2.setSelected(false);
            enableManufactureYearFilter2.setSelected(false);
            enableSeatsFilter2.setSelected(false);
            enableSerialNoFilter2.setSelected(false);
            enableModelNoFilter2.setSelected(false);
            enableMaintCertFilter2.setSelected(false);
            enableAvailabilityFilter2.setSelected(false);
            lblLocationFilter2.setVisible(visibility);
            drpLocationFilter2.setVisible(visibility);
            lblManufacturerFilter2.setVisible(visibility);
            drpManufacturerFilter2.setVisible(visibility);
            lblManufactureYearFilter2.setVisible(visibility);
            drpManufacturerYearFilter2.setVisible(visibility);
            lblSeatsFilter2.setVisible(visibility);
            txtMinSeats2.setVisible(visibility);
            txtMaxSeats2.setVisible(visibility);
            lblSerialNoFilter2.setVisible(visibility);
            txtSerialNoFilter2.setVisible(visibility);
            lblModelNoFilter2.setVisible(visibility);
            txtModelNoFilter2.setVisible(visibility);
            lblMaintCertFilter2.setVisible(visibility);
            chkMaintCertFilterYes2.setVisible(visibility);
            chkMaintCertFilterNo2.setVisible(visibility);
            lblAvaiabilityFilter2.setVisible(visibility);
            chkAvailabilityYes2.setVisible(visibility);
            chkAvaiabilityNo2.setVisible(visibility);
            btnSubmitAdvanceSearch2.setVisible(visibility);
            btnClearFilter2.setVisible(visibility);
        }
    }

    public boolean isAnyRadioEnabled() {
        if (enableLocationFilter2.isSelected() || enableManufacturerFilter2.isEnabled() || enableManufactureYearFilter2.isEnabled() || enableSeatsFilter2.isSelected() || enableSerialNoFilter2.isSelected() || enableModelNoFilter2.isEnabled()) {
            return true;
        } else {
            return false;
        }
    }

    public ArrayList<Cars> filteredList(String locationFilter, String manufacturer, String manufactureYear, int minSeats, int maxSeats, String serialNo, String modelNo, String maintCert, String availability) {
        ArrayList<Cars> filteredList = new ArrayList<>();
        ArrayList<Cars> finalFilteredList = new ArrayList<>();
        ArrayList<Cars> returnedList = new ArrayList<>();

        for (Cars cars : fleet.getFleet()) {

            if (locationFilter != null && !locationFilter.isBlank() && !locationFilter.isEmpty() && !locationFilter.equals("--ALL LOCATIONS--")) {
                if (!cars.getLocation().equals(locationFilter)) {
                    filteredList.add(cars);
                }
            }

            if (manufacturer != null && !manufacturer.isBlank() && !manufacturer.isBlank() && !manufacturer.equals("--ALL--")) {
                if (!cars.getManufacturer().equals(manufacturer)) {
                    filteredList.add(cars);
                }
            }

            if (manufactureYear != null && !manufactureYear.isEmpty() && !manufactureYear.isBlank() && !manufactureYear.equals("--ALL--")) {
                if (!cars.getManufactureYear().equals(manufactureYear)) {
                    filteredList.add(cars);
                }
            }

//            if (String.valueOf(minSeats) != null && !String.valueOf(minSeats).isEmpty() && String.valueOf(minSeats).isBlank() && String.valueOf(maxSeats) != null && !String.valueOf(maxSeats).isEmpty() && !String.valueOf(maxSeats).isBlank()) {
//                if (cars.getNumOfSeats() < minSeats && cars.getNumOfSeats() > maxSeats) {
//                    filteredList.add(cars);
//                }
//            }
            if (serialNo != null && !serialNo.isEmpty() && !serialNo.isBlank()) {
                if (!cars.getSerialNum().equals(serialNo)) {
                    filteredList.add(cars);
                }
            }

            if (modelNo != null && !modelNo.isEmpty() && !modelNo.isBlank()) {
                if (!cars.getModelNum().equals(modelNo)) {
                    filteredList.add(cars);
                }
            }

            if (maintCert != null && !maintCert.isEmpty() && !maintCert.isBlank()) {
                if (!cars.getMaintCertExpiry().equals(maintCert)) {
                    filteredList.add(cars);
                }
            }

            if (availability != null && !availability.isEmpty() && !availability.isBlank()) {
                if (!cars.getAvailability().equals(availability)) {
                    filteredList.add(cars);
                }
            }

        }

        finalFilteredList.addAll(fleet.getFleet());
        finalFilteredList.removeAll(filteredList);

        if (!String.valueOf(minSeats).equals("Min.") && !String.valueOf(maxSeats).equals("Max.")) {
            for (Cars cars : finalFilteredList) {
                if (txtMinSeats2.getText().equals("") && txtMaxSeats2.getText().equals("")) {
                    if (cars.getNumOfSeats() >= 0 && cars.getNumOfSeats() <= 1000) {
                        returnedList.add(cars);
                    }
                } else if (cars.getNumOfSeats() >= minSeats && cars.getNumOfSeats() <= maxSeats) {
                    returnedList.add(cars);
                }
            }

        }

        if ((returnedList != null && !returnedList.isEmpty()) || enableSeatsFilter2.isSelected()) {
            return returnedList;
        } else {
            return finalFilteredList;
        }

    }

}
